{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/licop/Documents/GitHub/LUI/src/components/AutoComplete/AutoCompele.stories.tsx\";\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import React from 'react';\\nimport { storiesOf } from '@storybook/react';\\nimport { action } from '@storybook/addon-actions';\\nimport { Story, Meta } from '@storybook/react/types-6-0';\\n\\nimport AutoComplete, {DataSourceType, AutoCompleteProps} from './AutoComplete';\\n\\nexport default {\\n  title: 'Components/AutoComplete',\\n  component: AutoComplete,\\n} as Meta;\\n\\ninterface GithubUserProps {\\n  login: string;\\n  url: string;\\n  avatar_url: string;\\n}\\n\\ninterface lakersProps {\\n  value: string,\\n  number: 1\\n}\\n\\nexport const Complete1: React.FC<Partial<AutoCompleteProps>> = () => {\\n\\n  const lakersWithNumber = [\\n    {value: 'bradley', number: 11},\\n    {value: 'pope', number: 1},\\n    {value: 'caruso', number: 4},\\n    {value: 'cook', number: 2},\\n    {value: 'cousins', number: 15},\\n    {value: 'james', number: 23},\\n    {value: 'AD', number: 3},\\n    {value: 'green', number: 14},\\n    {value: 'howard', number: 39},\\n    {value: 'kuzma', number: 0}\\n  ]\\n\\n  const handleFetch = (query: string) => {\\n    return lakersWithNumber.filter(player => player.value.includes(query))\\n  }\\n\\n  const renderOption = (item: lakersProps) => {\\n    return (\\n      <>\\n        <span>Name: {item.value}</span>\\n        <span style={{paddingLeft: '10px'}}>Number: {item.number}</span>\\n      </>\\n    )\\n  }\\n  return (\\n    <AutoComplete\\n      placeholder='搜索一个湖人球员' \\n      fetchSuggestions={handleFetch}\\n      onSelect={action('selected')}\\n      renderOption={renderOption}\\n    />\\n  )\\n}\\n\\nComplete1.storyName = '自动补全input'\\n\\nexport const Complete2: React.FC<AutoCompleteProps> = () => {\\n  const handleFetch = (query: string) => {\\n    return fetch(`https://api.github.com/search/users?q=${query}`)\\n      .then(res => res.json())\\n      .then(({ items }) => {\\n        console.log(items)\\n        return items.length > 0 && Array.isArray(items) ? items.slice(0, 10).map((item: any) => ({ value: item.login, ...item})) : []\\n      })\\n  }\\n\\n  const renderOption = (item: GithubUserProps) => {\\n    return (\\n      <>\\n        <span>Name: {item.login}</span>\\n        <span style={{paddingLeft: '10px'}}>url: {item.url}</span>\\n      </>\\n    )\\n  }\\n  \\n  return (\\n    <AutoComplete\\n      placeholder='搜索一个github的用户名' \\n      fetchSuggestions={handleFetch}\\n      onSelect={action('selected')}\\n      renderOption={renderOption}\\n    />\\n  )\\n}\\n\\nComplete2.storyName = '异步接口调用'\"; // @ts-ignore\n\nvar __LOCATIONS_MAP__ = {\n  \"Complete1\": {\n    \"startLoc\": {\n      \"col\": 63,\n      \"line\": 24\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 59\n    },\n    \"startBody\": {\n      \"col\": 63,\n      \"line\": 24\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 59\n    }\n  },\n  \"Complete2\": {\n    \"startLoc\": {\n      \"col\": 54,\n      \"line\": 63\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 90\n    },\n    \"startBody\": {\n      \"col\": 54,\n      \"line\": 63\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 90\n    }\n  }\n};\nimport React from 'react';\nimport { action } from '@storybook/addon-actions';\nimport AutoComplete from './AutoComplete';\nexport default {\n  title: 'Components/AutoComplete',\n  component: AutoComplete\n};\nexport const Complete1 = () => {\n  const lakersWithNumber = [{\n    value: 'bradley',\n    number: 11\n  }, {\n    value: 'pope',\n    number: 1\n  }, {\n    value: 'caruso',\n    number: 4\n  }, {\n    value: 'cook',\n    number: 2\n  }, {\n    value: 'cousins',\n    number: 15\n  }, {\n    value: 'james',\n    number: 23\n  }, {\n    value: 'AD',\n    number: 3\n  }, {\n    value: 'green',\n    number: 14\n  }, {\n    value: 'howard',\n    number: 39\n  }, {\n    value: 'kuzma',\n    number: 0\n  }];\n\n  const handleFetch = query => {\n    return lakersWithNumber.filter(player => player.value.includes(query));\n  };\n\n  const renderOption = item => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Name: \", item.value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          paddingLeft: '10px'\n        },\n        children: [\"Number: \", item.number]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AutoComplete, {\n    placeholder: \"\\u641C\\u7D22\\u4E00\\u4E2A\\u6E56\\u4EBA\\u7403\\u5458\",\n    fetchSuggestions: handleFetch,\n    onSelect: action('selected'),\n    renderOption: renderOption\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_c = Complete1;\nComplete1.storyName = '自动补全input';\nexport const Complete2 = () => {\n  const handleFetch = query => {\n    return fetch(`https://api.github.com/search/users?q=${query}`).then(res => res.json()).then(({\n      items\n    }) => {\n      console.log(items);\n      return items.length > 0 && Array.isArray(items) ? items.slice(0, 10).map(item => ({\n        value: item.login,\n        ...item\n      })) : [];\n    });\n  };\n\n  const renderOption = item => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Name: \", item.login]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          paddingLeft: '10px'\n        },\n        children: [\"url: \", item.url]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AutoComplete, {\n    placeholder: \"\\u641C\\u7D22\\u4E00\\u4E2Agithub\\u7684\\u7528\\u6237\\u540D\",\n    fetchSuggestions: handleFetch,\n    onSelect: action('selected'),\n    renderOption: renderOption\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Complete2;\nComplete2.storyName = '异步接口调用';\nComplete1.parameters = {\n  storySource: {\n    source: \"() => {\\n\\n  const lakersWithNumber = [\\n    {value: 'bradley', number: 11},\\n    {value: 'pope', number: 1},\\n    {value: 'caruso', number: 4},\\n    {value: 'cook', number: 2},\\n    {value: 'cousins', number: 15},\\n    {value: 'james', number: 23},\\n    {value: 'AD', number: 3},\\n    {value: 'green', number: 14},\\n    {value: 'howard', number: 39},\\n    {value: 'kuzma', number: 0}\\n  ]\\n\\n  const handleFetch = (query: string) => {\\n    return lakersWithNumber.filter(player => player.value.includes(query))\\n  }\\n\\n  const renderOption = (item: lakersProps) => {\\n    return (\\n      <>\\n        <span>Name: {item.value}</span>\\n        <span style={{paddingLeft: '10px'}}>Number: {item.number}</span>\\n      </>\\n    )\\n  }\\n  return (\\n    <AutoComplete\\n      placeholder='搜索一个湖人球员' \\n      fetchSuggestions={handleFetch}\\n      onSelect={action('selected')}\\n      renderOption={renderOption}\\n    />\\n  )\\n}\"\n  },\n  ...Complete1.parameters\n};\nComplete2.parameters = {\n  storySource: {\n    source: \"() => {\\n  const handleFetch = (query: string) => {\\n    return fetch(`https://api.github.com/search/users?q=${query}`)\\n      .then(res => res.json())\\n      .then(({ items }) => {\\n        console.log(items)\\n        return items.length > 0 && Array.isArray(items) ? items.slice(0, 10).map((item: any) => ({ value: item.login, ...item})) : []\\n      })\\n  }\\n\\n  const renderOption = (item: GithubUserProps) => {\\n    return (\\n      <>\\n        <span>Name: {item.login}</span>\\n        <span style={{paddingLeft: '10px'}}>url: {item.url}</span>\\n      </>\\n    )\\n  }\\n  \\n  return (\\n    <AutoComplete\\n      placeholder='搜索一个github的用户名' \\n      fetchSuggestions={handleFetch}\\n      onSelect={action('selected')}\\n      renderOption={renderOption}\\n    />\\n  )\\n}\"\n  },\n  ...Complete2.parameters\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Complete1\");\n$RefreshReg$(_c2, \"Complete2\");","map":{"version":3,"sources":["/Users/licop/Documents/GitHub/LUI/src/components/AutoComplete/AutoCompele.stories.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { storiesOf } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\nimport { Story, Meta } from '@storybook/react/types-6-0';\n\nimport AutoComplete, {DataSourceType, AutoCompleteProps} from './AutoComplete';\n\nexport default {\n  title: 'Components/AutoComplete',\n  component: AutoComplete,\n} as Meta;\n\ninterface GithubUserProps {\n  login: string;\n  url: string;\n  avatar_url: string;\n}\n\ninterface lakersProps {\n  value: string,\n  number: 1\n}\n\nexport const Complete1: React.FC<Partial<AutoCompleteProps>> = () => {\n\n  const lakersWithNumber = [\n    {value: 'bradley', number: 11},\n    {value: 'pope', number: 1},\n    {value: 'caruso', number: 4},\n    {value: 'cook', number: 2},\n    {value: 'cousins', number: 15},\n    {value: 'james', number: 23},\n    {value: 'AD', number: 3},\n    {value: 'green', number: 14},\n    {value: 'howard', number: 39},\n    {value: 'kuzma', number: 0}\n  ]\n\n  const handleFetch = (query: string) => {\n    return lakersWithNumber.filter(player => player.value.includes(query))\n  }\n\n  const renderOption = (item: lakersProps) => {\n    return (\n      <>\n        <span>Name: {item.value}</span>\n        <span style={{paddingLeft: '10px'}}>Number: {item.number}</span>\n      </>\n    )\n  }\n  return (\n    <AutoComplete\n      placeholder='搜索一个湖人球员' \n      fetchSuggestions={handleFetch}\n      onSelect={action('selected')}\n      renderOption={renderOption}\n    />\n  )\n}\n\nComplete1.storyName = '自动补全input'\n\nexport const Complete2: React.FC<AutoCompleteProps> = () => {\n  const handleFetch = (query: string) => {\n    return fetch(`https://api.github.com/search/users?q=${query}`)\n      .then(res => res.json())\n      .then(({ items }) => {\n        console.log(items)\n        return items.length > 0 && Array.isArray(items) ? items.slice(0, 10).map((item: any) => ({ value: item.login, ...item})) : []\n      })\n  }\n\n  const renderOption = (item: GithubUserProps) => {\n    return (\n      <>\n        <span>Name: {item.login}</span>\n        <span style={{paddingLeft: '10px'}}>url: {item.url}</span>\n      </>\n    )\n  }\n  \n  return (\n    <AutoComplete\n      placeholder='搜索一个github的用户名' \n      fetchSuggestions={handleFetch}\n      onSelect={action('selected')}\n      renderOption={renderOption}\n    />\n  )\n}\n\nComplete2.storyName = '异步接口调用'"]},"metadata":{},"sourceType":"module"}