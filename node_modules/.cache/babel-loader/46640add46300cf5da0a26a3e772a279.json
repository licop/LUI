{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/licop/Documents/GitHub/LUI/src/components/Upload/upload.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport axios from 'axios';\nimport Button from '../Button/button';\n\nconst Upload = props => {\n  _s();\n\n  const {\n    action,\n    onProgress,\n    onSuccess,\n    onError\n  } = props;\n  const fileInput = useRef(null);\n\n  const handleClick = () => {\n    if (fileInput.current) {\n      fileInput.current.click();\n    }\n  };\n\n  const uploadFiles = files => {\n    let postFiles = Array.from(files);\n    postFiles.forEach(file => {});\n  };\n\n  const post = file => {\n    const formData = new FormData();\n    formData.append(file.name, file);\n    axios.post(action, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      onUploadProgress: e => {\n        let percentage = Math.round(e.load * 100 / e.total) || 0;\n\n        if (percentage < 100) {\n          if (onProgress) {\n            onProgress(percentage, file);\n          }\n        }\n      }\n    }).then(resp => {\n      console.log(resp);\n\n      if (onSuccess) {\n        onSuccess(resp.data, file);\n      }\n    }).catch(err => {\n      console.error(err);\n\n      if (onError) {\n        onError(err, file);\n      }\n    });\n  };\n\n  const handleChange = e => {\n    const files = e.target.files;\n\n    if (!files) {\n      return;\n    }\n\n    uploadFiles(files);\n\n    if (fileInput.current) {\n      fileInput.current.value = '';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lui-uplaod-component\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      btnType: \"primary\",\n      onClick: handleClick,\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"lui-file-input\",\n      style: {\n        display: 'none'\n      },\n      onChange: handleChange,\n      type: \"file\",\n      ref: fileInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Upload, \"09+ds+3z18rIiMAYMZa/YbTXEjU=\");\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/Users/licop/Documents/GitHub/LUI/src/components/Upload/upload.tsx"],"names":["React","useRef","axios","Button","Upload","props","action","onProgress","onSuccess","onError","fileInput","handleClick","current","click","uploadFiles","files","postFiles","Array","from","forEach","file","post","formData","FormData","append","name","headers","onUploadProgress","e","percentage","Math","round","load","total","then","resp","console","log","data","catch","err","error","handleChange","target","value","display"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef, ChangeEvent} from 'react';\nimport axios from 'axios';\nimport Button from '../Button/button';\n\nexport interface UploadProps {\n    action: string;\n    beforeUpload?: (file: File) => boolean | Promise<File>;\n    onProgress?: (percentage: number, file: File) => void;\n    onSuccess?: (data: any, file: File) => void;\n    onError?: (err: any, file: File) => void;\n}\n\nconst Upload: React.FC<UploadProps> = (props) => {\n    const {\n        action,\n        onProgress,\n        onSuccess,\n        onError\n    } = props;\n    const fileInput = useRef<HTMLInputElement>(null);\n    const handleClick = () => {\n        if(fileInput.current) {\n            fileInput.current.click()\n        } \n    }\n    \n    const uploadFiles = (files: FileList) => {\n        let postFiles = Array.from(files);\n        postFiles.forEach(file => {\n            \n        })\n    }\n    \n    const post = (file: File) => {\n        const formData = new FormData();\n        formData.append(file.name, file);\n        axios.post(action, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data' \n            },\n            onUploadProgress: (e) => {\n                let percentage = Math.round((e.load * 100) / e.total) || 0;\n                if(percentage < 100) {\n                    if(onProgress) {\n                        onProgress(percentage, file);\n                    }\n                }\n            }\n        }).then(resp => {\n            console.log(resp);\n            if(onSuccess) {\n                onSuccess(resp.data, file);\n            }\n        }).catch(err => {\n            console.error(err);\n            if(onError) {\n                onError(err, file);\n            }\n        })\n    }\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const files = e.target.files;\n        if(!files) {\n            return;\n        }\n        uploadFiles(files);\n        if(fileInput.current) {\n            fileInput.current.value = ''\n        }\n    }\n\n    return <div className=\"lui-uplaod-component\">\n        <Button \n            btnType=\"primary\"\n            onClick={handleClick}\n        > \n            Upload File\n        </Button>\n        <input\n            className=\"lui-file-input\"\n            style={{display: 'none'}}\n            onChange={handleChange}\n            type='file'\n            ref={fileInput}\n        ></input>\n    </div>\n}\n\nexport default Upload;\n"]},"metadata":{},"sourceType":"module"}