{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/licop/Documents/GitHub/LUI/src/components/Transition/Transition.tsx\";\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nconst Transition = props => {\n  const {\n    children,\n    classNames,\n    animation,\n    wrapper,\n    ...restProps\n  } = props;\n  return /*#__PURE__*/_jsxDEV(CSSTransition, {\n    classNames: classNames ? classNames : animation,\n    ...restProps,\n    children: wrapper ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 24\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Transition;\nTransition.defaultProps = {\n  unmountOnExit: true,\n  appear: true\n};\nexport default Transition;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transition\");","map":{"version":3,"sources":["/Users/licop/Documents/GitHub/LUI/src/components/Transition/Transition.tsx"],"names":["React","CSSTransition","Transition","props","children","classNames","animation","wrapper","restProps","defaultProps","unmountOnExit","appear"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AAaA,MAAMC,UAAwC,GAAIC,KAAD,IAAW;AACxD,QAAM;AACFC,IAAAA,QADE;AAEFC,IAAAA,UAFE;AAGFC,IAAAA,SAHE;AAIFC,IAAAA,OAJE;AAKF,OAAGC;AALD,MAMFL,KANJ;AAQA,sBACI,QAAC,aAAD;AACI,IAAA,UAAU,EAAKE,UAAU,GAAGA,UAAH,GAAgBC,SAD7C;AAAA,OAEQE,SAFR;AAAA,cAIKD,OAAO,gBAAG;AAAA,gBAAMH;AAAN;AAAA;AAAA;AAAA;AAAA,YAAH,GAA2BA;AAJvC;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAjBD;;KAAMF,U;AAmBNA,UAAU,CAACO,YAAX,GAA0B;AACtBC,EAAAA,aAAa,EAAE,IADO;AAEtBC,EAAAA,MAAM,EAAE;AAFc,CAA1B;AAKA,eAAeT,UAAf","sourcesContent":["import React from 'react';\nimport { CSSTransition } from 'react-transition-group'\nimport { CSSTransitionProps } from 'react-transition-group/CSSTransition'\n\ntype AnimationName = 'zoom-in-top' | 'zoom-in-left' | 'zoom-in-bottom' | 'zoom-in-right';\n\n/**\n * @wapper: 防止children的transition覆盖动画效果\n */\ntype TransitionProps = CSSTransitionProps & {\n    animation?: AnimationName,\n    wrapper? : boolean, \n}\n\nconst Transition: React.FC<CSSTransitionProps> = (props) => {\n    const {\n        children,\n        classNames,\n        animation,\n        wrapper,\n        ...restProps\n    } = props\n\n    return (\n        <CSSTransition\n            classNames = { classNames ? classNames : animation}\n            {...restProps}\n            >\n            {wrapper ? <div>{children}</div> : children}\n        </CSSTransition>\n    )\n}\n\nTransition.defaultProps = {\n    unmountOnExit: true,\n    appear: true,\n}\n\nexport default Transition"]},"metadata":{},"sourceType":"module"}