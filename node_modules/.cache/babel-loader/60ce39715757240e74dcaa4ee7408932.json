{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/licop/Documents/GitHub/LUI/src/components/Button/button.tsx\";\nimport React from 'react';\nimport classNames from 'classnames';\n\nconst Button = props => {\n  const {\n    btnType,\n    disabled,\n    size,\n    classname,\n    children,\n    href,\n    ...restProps\n  } = props; // btn, btn-lg, btn-primary\n\n  const classes = classNames('btn', classname, {\n    [`btn-${btnType}`]: btnType,\n    [`btn-${size}`]: size,\n    'disabled': btnType === ButtonType.Link && disabled\n  });\n\n  if (btnType === ButtonType.Link && href) {\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      href: href,\n      className: classes,\n      ...restProps,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes,\n      disabled: disabled,\n      ...restProps,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_c = Button;\nButton.defaultProps = {\n  disabled: false,\n  btnType: ButtonType.Default\n};\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/licop/Documents/GitHub/LUI/src/components/Button/button.tsx"],"names":["React","classNames","Button","props","btnType","disabled","size","classname","children","href","restProps","classes","ButtonType","Link","defaultProps","Default"],"mappings":";;AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAoBA,MAAMC,MAA6B,GAAIC,KAAD,IAAW;AAC7C,QAAM;AACFC,IAAAA,OADE;AAEFC,IAAAA,QAFE;AAGFC,IAAAA,IAHE;AAIFC,IAAAA,SAJE;AAKFC,IAAAA,QALE;AAMFC,IAAAA,IANE;AAOF,OAAGC;AAPD,MAQFP,KARJ,CAD6C,CAU7C;;AACA,QAAMQ,OAAO,GAAGV,UAAU,CAAC,KAAD,EAAQM,SAAR,EAAmB;AACzC,KAAE,OAAMH,OAAQ,EAAhB,GAAoBA,OADqB;AAEzC,KAAE,OAAME,IAAK,EAAb,GAAiBA,IAFwB;AAGzC,gBAAaF,OAAO,KAAKQ,UAAU,CAACC,IAAvB,IAA+BR;AAHH,GAAnB,CAA1B;;AAMA,MAAGD,OAAO,KAAKQ,UAAU,CAACC,IAAvB,IAA+BJ,IAAlC,EAAwC;AACpC,wBAAO;AACL,MAAA,IAAI,EAAEA,IADD;AAEL,MAAA,SAAS,EAAEE,OAFN;AAAA,SAGDD,SAHC;AAAA,gBAILF;AAJK;AAAA;AAAA;AAAA;AAAA,YAAP;AAKH,GAND,MAMO;AACP,wBAAO;AACA,MAAA,SAAS,EAAEG,OADX;AAEA,MAAA,QAAQ,EAAEN,QAFV;AAAA,SAGIK,SAHJ;AAAA,gBAIDF;AAJC;AAAA;AAAA;AAAA;AAAA,YAAP;AAMC;AACJ,CA/BD;;KAAMN,M;AAiCNA,MAAM,CAACY,YAAP,GAAsB;AAClBT,EAAAA,QAAQ,EAAE,KADQ;AAElBD,EAAAA,OAAO,EAAEQ,UAAU,CAACG;AAFF,CAAtB;AAKA,eAAeb,MAAf","sourcesContent":["import React, { ReactNode } from 'react';\nimport classNames from 'classnames';\n\n\nexport type ButtonType = 'primary' | 'default' | 'danger' | 'link';\nexport type ButtonSize = 'lg' | 'sm';\n\n\ninterface BaseButtonProps {\n    classname?: string;\n    disabled?: boolean;\n    size?: ButtonSize;\n    btnType?: ButtonType;\n    children?: React.ReactNode,\n    href?: string\n}\n\ntype NativeButtonProps = BaseButtonProps & React.ButtonHTMLAttributes<HTMLElement>\ntype AnchorButtonProps = BaseButtonProps & React.AnchorHTMLAttributes<HTMLElement>\nexport type ButtonProps = Partial<NativeButtonProps & AnchorButtonProps>\n\nconst Button: React.FC<ButtonProps> = (props) => {\n    const {\n        btnType,\n        disabled,\n        size,\n        classname,\n        children,\n        href,\n        ...restProps\n    } = props;\n    // btn, btn-lg, btn-primary\n    const classes = classNames('btn', classname, {\n        [`btn-${btnType}`]: btnType,\n        [`btn-${size}`]: size,\n        'disabled': (btnType === ButtonType.Link && disabled)\n    });\n\n    if(btnType === ButtonType.Link && href) {\n        return <a \n          href={href}\n          className={classes}\n          {...restProps}\n        >{children}</a>\n    } else {\n    return <button\n           className={classes}\n           disabled={disabled}\n           {...restProps}\n        >{children}\n        </button>\n    }\n}\n\nButton.defaultProps = {\n    disabled: false,\n    btnType: ButtonType.Default\n}\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}