{"ast":null,"code":"import _toConsumableArray from\"/Users/licop/Documents/GitHub/LUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/licop/Documents/GitHub/LUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/licop/Documents/GitHub/LUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState,useRef}from'react';import axios from'axios';import Dragger from'./dragger';import UploadList from'./UploadList';/**\n * 上传文件组件\n */var Upload=function Upload(props){var action=props.action,defaultFileList=props.defaultFileList,onProgress=props.onProgress,onSuccess=props.onSuccess,onError=props.onError,beforeUpload=props.beforeUpload,onChange=props.onChange,onRemove=props.onRemove,withCredentials=props.withCredentials,headers=props.headers,data=props.data,name=props.name,accept=props.accept,multiple=props.multiple,children=props.children,drag=props.drag;var fileInput=useRef(null);var _useState=useState(defaultFileList||[]),_useState2=_slicedToArray(_useState,2),fileList=_useState2[0],setFileList=_useState2[1];var uploadFileList=function uploadFileList(uploadFile,uploadObj){setFileList(function(prevList){return prevList.map(function(file){if(file.uid===uploadFile.uid){return _objectSpread(_objectSpread({},file),uploadObj);}else{return file;}});});};var handleClick=function handleClick(){if(fileInput.current){fileInput.current.click();}};var uploadFiles=function uploadFiles(files){var postFiles=Array.from(files);postFiles.forEach(function(file){if(!beforeUpload){post(file);}else{var result=beforeUpload(file);if(result&&result instanceof Promise){result.then(function(processFile){post(processFile);});}else if(result!==false){post(file);}}});};var post=function post(file){var formData=new FormData();var _file={uid:Date.now()+'upload-file',status:'ready',name:file.name,size:file.size,percent:0,raw:file};setFileList(function(prevList){return[_file].concat(_toConsumableArray(prevList));});formData.append(name||'file',file);if(data){Object.keys(data).forEach(function(key){formData.append(key,data[key]);});}axios.post(action,formData,{headers:_objectSpread(_objectSpread({},headers),{},{'Content-Type':'multipart/form-data'}),withCredentials:withCredentials,onUploadProgress:function onUploadProgress(e){var percentage=Math.round(e.loaded*100/e.total)||0;if(percentage<100){uploadFileList(_file,{percent:percentage,status:'uploading'});if(onProgress){onProgress(percentage,file);}}}}).then(function(resp){uploadFileList(_file,{status:'success',response:resp.data});if(onSuccess){onSuccess(resp.data,file);}if(onChange){onChange(file);}}).catch(function(err){uploadFileList(_file,{status:'error',error:err});if(onError){onError(err,file);}if(onChange){onChange(file);}});};var handleChange=function handleChange(e){var files=e.target.files;if(!files){return;}uploadFiles(files);if(fileInput.current){fileInput.current.value='';}};var handleRemove=function handleRemove(file){setFileList(function(prevList){return prevList.filter(function(item){return item.uid!==file.uid;});});if(onRemove){onRemove(file);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"lui-upload-component\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"lui-upload-input\",onClick:handleClick,children:[drag?/*#__PURE__*/_jsx(Dragger,{onFile:function onFile(files){uploadFiles(files);},children:children}):children,/*#__PURE__*/_jsx(\"input\",{className:\"lui-file-input\",style:{display:'none'},onChange:handleChange,type:\"file\",ref:fileInput,accept:accept,multiple:multiple})]}),/*#__PURE__*/_jsx(UploadList,{fileList:fileList,onRemove:handleRemove})]});};export default Upload;","map":{"version":3,"sources":["/Users/licop/Documents/GitHub/LUI/src/components/Upload/Upload.tsx"],"names":["React","useState","useRef","axios","Dragger","UploadList","Upload","props","action","defaultFileList","onProgress","onSuccess","onError","beforeUpload","onChange","onRemove","withCredentials","headers","data","name","accept","multiple","children","drag","fileInput","fileList","setFileList","uploadFileList","uploadFile","uploadObj","prevList","map","file","uid","handleClick","current","click","uploadFiles","files","postFiles","Array","from","forEach","post","result","Promise","then","processFile","formData","FormData","_file","Date","now","status","size","percent","raw","append","Object","keys","key","onUploadProgress","e","percentage","Math","round","loaded","total","resp","response","catch","err","error","handleChange","target","value","handleRemove","filter","item","display"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef, ChangeEvent} from 'react';\nimport axios from 'axios';\nimport Dragger from './dragger';\nimport UploadList from './UploadList'\n\ntype UploadFileStatus = 'ready' | 'uploading' | 'success' | 'error';\nexport interface UploadFile {\n    uid: string;\n    size: number;\n    name: string;\n    status?: UploadFileStatus;\n    percent?: number;\n    raw?: File;\n    response?: any;\n    error?: any;  \n}\n\nexport interface UploadProps {\n    /**\n     * 文件上传的目标路径地址\n     */\n    action: string;\n    /**\n     * 默认文件列表\n     */\n    defaultFileList?: UploadFile[];\n    /**\n     * 文件上传前回调函数\n     */\n    beforeUpload?: (file: File) => boolean | Promise<File>;\n    /**\n     * 上传过程中回调\n     */\n    onProgress?: (percentage: number, file: File) => void;\n    /**\n     * 文件上传成功回调\n     */\n    onSuccess?: (data: any, file: File) => void;\n    /**\n     * 文件上传失误回调\n     */\n    onError?: (err: any, file: File) => void;\n    /**\n     * 状态改变时回调\n     */\n    onChange?: (file: File) => void;\n    /**\n     * 移除文件时回调\n     */\n    onRemove?: (file: UploadFile) => void;\n    /**\n     * 是否传递cookie\n     */\n    withCredentials?: boolean;\n    /**\n     * 请求头部设置\n     */\n    headers?: {[key: string]: any};\n    /**\n     * 上传文件名称\n     */\n    name?: string;\n    /**\n     * 上传时传递数据\n     */\n    data?: {[key: string]: any};\n    /**\n     * 接受文件类型\n     */\n    accept?: string\n    /**\n     * 是否支持多文件同时上传\n     */\n    multiple?: boolean\n    /**\n     * 是否支持拖动上传\n     */\n    drag?: boolean\n}\n/**\n * 上传文件组件\n */\nconst Upload: React.FC<UploadProps> = (props) => {\n    const {\n        action,\n        defaultFileList,\n        onProgress,\n        onSuccess,\n        onError,\n        beforeUpload,\n        onChange,\n        onRemove,\n        withCredentials,\n        headers,\n        data,\n        name,\n        accept,\n        multiple,\n        children,\n        drag\n    } = props;\n    const fileInput = useRef<HTMLInputElement>(null);\n    const [fileList, setFileList] = useState<UploadFile[]>(defaultFileList || []);\n\n    const uploadFileList = (uploadFile: UploadFile, uploadObj: Partial<UploadFile>) => {\n        setFileList(prevList => {\n            return prevList.map(file => {\n                if(file.uid === uploadFile.uid) {\n                    return {...file, ...uploadObj}\n                } else {\n                    return file;\n                }\n            })\n        })\n    }\n    \n    const handleClick = () => {\n        if(fileInput.current) {\n            fileInput.current.click()\n        } \n    }\n    \n    const uploadFiles = (files: FileList) => {\n        let postFiles = Array.from(files);\n        postFiles.forEach(file => {\n            if(!beforeUpload) {\n                post(file)\n            } else {\n                const result = beforeUpload(file);\n                if(result && result instanceof Promise) {\n                    result.then(processFile => {\n                        post(processFile)\n                    }) \n                } else if(result !== false) {\n                    post(file);\n                }\n            }\n        })\n    }\n    \n    const post = (file: File) => {\n        const formData = new FormData();\n        let _file: UploadFile = {\n            uid: Date.now() + 'upload-file',\n            status: 'ready',\n            name: file.name,\n            size: file.size,\n            percent: 0,\n            raw: file\n        }\n        setFileList(prevList => {\n            return [_file, ...prevList]\n        })\n        formData.append(name || 'file', file);\n        if(data) {\n            Object.keys(data).forEach(key => {\n                formData.append(key, data[key]);\n            })\n        }\n        axios.post(action, formData, {\n            headers: {\n                ...headers,\n                'Content-Type': 'multipart/form-data' \n            },\n            withCredentials,\n            onUploadProgress: (e) => {\n                let percentage = Math.round((e.loaded * 100) / e.total) || 0;\n                if(percentage < 100 ) {\n                    uploadFileList(_file, {percent: percentage, status: 'uploading'});\n                    if(onProgress) {\n                        onProgress(percentage, file);\n                    }\n                }\n            }\n        }).then(resp => {\n            uploadFileList(_file, {status: 'success', response: resp.data})\n            \n            if(onSuccess) {\n                onSuccess(resp.data, file);\n            }\n            if(onChange) {\n                onChange(file);\n            }\n        }).catch(err => {\n            uploadFileList(_file, {status: 'error', error: err})\n            if(onError) {\n                onError(err, file);\n            }\n            if(onChange) {\n                onChange(file);\n            }\n        })\n\n    }\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const files = e.target.files;\n        if(!files) {\n            return;\n        }\n        uploadFiles(files);\n        if(fileInput.current) {\n            fileInput.current.value = ''\n        }\n    }\n    const handleRemove = (file: UploadFile) => {\n        setFileList(prevList => {\n            return prevList.filter(item => item.uid !== file.uid)\n        });\n        if(onRemove) {\n            onRemove(file);\n        }\n    }\n\n    return <div className=\"lui-upload-component\">\n        <div \n            className=\"lui-upload-input\"\n            onClick={handleClick}\n        >   \n            {drag ? \n                <Dragger onFile={(files) => {uploadFiles(files)}}>\n                    {children}\n                </Dragger>:\n                children\n            }\n            <input\n                className=\"lui-file-input\"\n                style={{display: 'none'}}\n                onChange={handleChange}\n                type='file'\n                ref={fileInput}\n                accept={accept}\n                multiple={multiple}\n            />\n        </div>\n        <UploadList \n            fileList={fileList}\n            onRemove={handleRemove}\n        />\n    </div>\n}\n\n\n\nexport default Upload;\n"]},"metadata":{},"sourceType":"module"}