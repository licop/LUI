{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/licop/Documents/GitHub/LUI/src/components/Upload/dragger.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\nexport const Dragger = props => {\n  _s();\n\n  const {\n    onFile,\n    children\n  } = props;\n  const [dragOver, setDragOver] = useState(false);\n  const klass = classNames('lui-uploader-dragger', {\n    'is-dragover': dragOver\n  });\n\n  const handleDrop = e => {\n    e.preventDefault();\n    setDragOver(false);\n    onFile(e.dataTransfer.files);\n  };\n\n  const handleDrag = (e, over) => {\n    e.preventDefault();\n    setDragOver(over);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: klass,\n    onDragOver: e => {\n      handleDrag(e, true);\n    },\n    onDragLeave: e => {\n      handleDrag(e, false);\n    },\n    onDrop: handleDrop,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dragger, \"SauZLyDzO/42ZQ4qSjzRSFXi3+c=\");\n\n_c = Dragger;\nexport default Dragger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dragger\");","map":{"version":3,"sources":["/Users/licop/Documents/GitHub/LUI/src/components/Upload/dragger.tsx"],"names":["React","useState","classNames","Dragger","props","onFile","children","dragOver","setDragOver","klass","handleDrop","e","preventDefault","dataTransfer","files","handleDrag","over"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAA+C,OAA/C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAMA,OAAO,MAAMC,OAAyB,GAAIC,KAAD,IAAW;AAAA;;AAClD,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAuBF,KAA7B;AACA,QAAM,CAAEG,QAAF,EAAYC,WAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMQ,KAAK,GAAGP,UAAU,CAAC,sBAAD,EAAyB;AAC/C,mBAAeK;AADgC,GAAzB,CAAxB;;AAGA,QAAMG,UAAU,GAAIC,CAAD,IAA+B;AAChDA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAH,IAAAA,MAAM,CAACM,CAAC,CAACE,YAAF,CAAeC,KAAhB,CAAN;AACD,GAJD;;AAKA,QAAMC,UAAU,GAAG,CAACJ,CAAD,EAA4BK,IAA5B,KAA8C;AAC/DL,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,WAAW,CAACQ,IAAD,CAAX;AACD,GAHD;;AAIA,sBACE;AACE,IAAA,SAAS,EAAEP,KADb;AAEE,IAAA,UAAU,EAAEE,CAAC,IAAI;AAAEI,MAAAA,UAAU,CAACJ,CAAD,EAAI,IAAJ,CAAV;AAAoB,KAFzC;AAGE,IAAA,WAAW,EAAEA,CAAC,IAAI;AAAEI,MAAAA,UAAU,CAACJ,CAAD,EAAI,KAAJ,CAAV;AAAqB,KAH3C;AAIE,IAAA,MAAM,EAAED,UAJV;AAAA,cAMGJ;AANH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAzBM;;GAAMH,O;;KAAAA,O;AA2Bb,eAAeA,OAAf","sourcesContent":["import React, { FC, useState, DragEvent } from 'react'\nimport classNames from 'classnames'\n\ninterface DraggerProps {\n  onFile: (files: FileList) => void;\n}\n\nexport const Dragger: FC<DraggerProps> = (props) => {\n  const { onFile, children } = props\n  const [ dragOver, setDragOver ] = useState(false)\n  const klass = classNames('lui-uploader-dragger', {\n    'is-dragover': dragOver\n  })\n  const handleDrop = (e: DragEvent<HTMLElement>) => {\n    e.preventDefault()\n    setDragOver(false)\n    onFile(e.dataTransfer.files)\n  }\n  const handleDrag = (e: DragEvent<HTMLElement>, over: boolean) => {\n    e.preventDefault()\n    setDragOver(over)\n  }\n  return (\n    <div \n      className={klass}\n      onDragOver={e => { handleDrag(e, true)}}\n      onDragLeave={e => { handleDrag(e, false)}}\n      onDrop={handleDrop}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport default Dragger;"]},"metadata":{},"sourceType":"module"}