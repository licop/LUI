{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/licop/Documents/GitHub/LUI/src/components/Menu/subMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport classNames from 'classnames';\nimport { MenuContext } from './menu';\nimport Icon from '../Icon/icon';\n\nconst SubMenu = props => {\n  _s();\n\n  const context = useContext(MenuContext);\n  const {\n    index,\n    title,\n    children,\n    className\n  } = props;\n  const opendSubMenus = context.defaultOpenSubMenu;\n  const isOpend = index && context.mode === 'vertical' ? opendSubMenus.includes(index) : false;\n  const [open, setOpen] = useState(isOpend);\n  const classes = classNames('menu-item submenu-item', className, {\n    \"is-active\": context.index === index,\n    \"is-opened\": open,\n    \"is-vertical\": context.mode\n  });\n\n  const handleClick = e => {\n    e.preventDefault();\n    setOpen(!open);\n  };\n\n  let timer;\n\n  const handleMouse = (e, toggle) => {\n    clearTimeout(timer);\n    e.preventDefault();\n    timer = setTimeout(() => {\n      setOpen(toggle);\n    }, 300);\n  };\n\n  const clickEvents = context.mode === 'vertical' ? {\n    onClick: handleClick\n  } : {};\n  const hoverEvents = context.mode === 'horizontal' ? {\n    onMouseEnter: e => {\n      handleMouse(e, true);\n    },\n    onMouseLeave: e => {\n      handleMouse(e, false);\n    }\n  } : {};\n\n  const renderChildren = () => {\n    const subMenuClasses = classNames('lui-submenu', {\n      'menu-opened': open\n    });\n    const childrenComponent = React.Children.map(children, (child, i) => {\n      const childElement = child;\n\n      if (childElement.type.displayName === 'MenuItem') {\n        return /*#__PURE__*/React.cloneElement(childElement, {\n          index: `${index}-${i}`\n        });\n      } else {\n        console.error(\"Warning: Menu has a child which is not a MenuItem component\");\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: subMenuClasses,\n      children: childrenComponent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classes,\n    ...hoverEvents,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submenu-title\",\n      onClick: handleClick,\n      ...clickEvents,\n      children: [title, /*#__PURE__*/_jsxDEV(Icon, {\n        icon: \"angle-down\",\n        className: \"arrow-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), renderChildren()]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SubMenu, \"cAs+VTImMn/GVTW0k6AhYj02eaA=\");\n\n_c = SubMenu;\nSubMenu.displayName = 'SubMenu';\nexport default SubMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubMenu\");","map":{"version":3,"sources":["/Users/licop/Documents/GitHub/LUI/src/components/Menu/subMenu.tsx"],"names":["React","useContext","useState","classNames","MenuContext","Icon","SubMenu","props","context","index","title","children","className","opendSubMenus","defaultOpenSubMenu","isOpend","mode","includes","open","setOpen","classes","handleClick","e","preventDefault","timer","handleMouse","toggle","clearTimeout","setTimeout","clickEvents","onClick","hoverEvents","onMouseEnter","onMouseLeave","renderChildren","subMenuClasses","childrenComponent","Children","map","child","i","childElement","type","displayName","cloneElement","console","error"],"mappings":"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","sourcesContent":["import React, { FunctionComponentElement, useContext, useState } from 'react';\n\nimport classNames from 'classnames';\nimport { MenuContext } from './menu';\nimport { MenuItemProps } from './menuItem';\nimport Icon from '../Icon/icon'\n\nexport interface SubMenuProps {\n    index?: string,\n    title: string,\n    className?: string\n}\n\nconst SubMenu: React.FC<SubMenuProps> = (props) => {\n    const context = useContext(MenuContext);\n    const {index, title, children, className} = props;\n\n    const opendSubMenus = context.defaultOpenSubMenu as Array<string>;\n    const isOpend = (index && context.mode === 'vertical') ? opendSubMenus.includes(index) : false;\n    const [open, setOpen] = useState(isOpend);\n    const classes = classNames('menu-item submenu-item', className, {\n        \"is-active\": context.index === index,\n        \"is-opened\": open,\n        \"is-vertical\": context.mode\n\n    });\n    const handleClick = (e: React.MouseEvent) => {\n        e.preventDefault();\n        setOpen(!open);\n    }\n    let timer: any;\n    const handleMouse = (e: React.MouseEvent, toggle: boolean) => {\n        clearTimeout(timer);\n        e.preventDefault();\n        timer = setTimeout(() => {\n            setOpen(toggle);\n        }, 300);\n    }\n    const clickEvents = context.mode === 'vertical' ? {\n        onClick: handleClick\n    } : {}\n    const hoverEvents = context.mode === 'horizontal' ? {\n        onMouseEnter: (e: React.MouseEvent) => { handleMouse(e, true) },\n        onMouseLeave: (e: React.MouseEvent) => { handleMouse(e, false) }\n    } : {}\n\n    const renderChildren = () => {\n        const subMenuClasses = classNames('lui-submenu', {\n            'menu-opened': open\n        });\n\n        const childrenComponent = React.Children.map(children, (child, i) => {\n            const childElement = child as FunctionComponentElement<MenuItemProps>;\n            if(childElement.type.displayName === 'MenuItem') {\n                return React.cloneElement(childElement, {\n                    index: `${index}-${i}`\n                })\n            } else {\n                console.error(\"Warning: Menu has a child which is not a MenuItem component\");\n            }\n        })\n         \n        return (<ul className={subMenuClasses}>\n            {childrenComponent}\n        </ul>)\n    };\n\n    return (<li key={index} className={classes} {...hoverEvents}>\n        <div className=\"submenu-title\" onClick={handleClick} {...clickEvents}>\n            {title}\n            <Icon icon=\"angle-down\" className=\"arrow-icon\" />\n        </div>\n        {renderChildren()}\n    </li>)\n}\n\nSubMenu.displayName = 'SubMenu';\nexport default SubMenu;\n"]},"metadata":{},"sourceType":"module"}