{"ast":null,"code":"import _objectSpread from\"/Users/licop/Documents/GitHub/LUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";/* eslint-disable */ // @ts-nocheck\n// @ts-ignore\nvar __STORY__=\"import React from 'react';\\nimport { action } from '@storybook/addon-actions';\\nimport { Story, Meta } from '@storybook/react/types-6-0';\\n\\nimport AutoComplete, {DataSourceType, AutoCompleteProps} from './AutoComplete';\\n\\nexport default {\\n  title: 'Components/AutoComplete',\\n  component: AutoComplete,\\n} as Meta;\\n\\ninterface GithubUserProps {\\n  login: string;\\n  url: string;\\n  avatar_url: string;\\n}\\n\\ninterface lakersProps {\\n  value: string,\\n  number: 1\\n}\\n\\nexport const Complete1: React.FC<AutoCompleteProps> = (props) => {\\n\\n  const lakersWithNumber = [\\n    {value: 'bradley', number: 11},\\n    {value: 'pope', number: 1},\\n    {value: 'caruso', number: 4},\\n    {value: 'cook', number: 2},\\n    {value: 'cousins', number: 15},\\n    {value: 'james', number: 23},\\n    {value: 'AD', number: 3},\\n    {value: 'green', number: 14},\\n    {value: 'howard', number: 39},\\n    {value: 'kuzma', number: 0}\\n  ]\\n\\n  const handleFetch = (query: string) => {\\n    return lakersWithNumber.filter(player => player.value.includes(query))\\n  }\\n\\n  const renderOption = (item: lakersProps) => {\\n    return (\\n      <>\\n        <span>Name: {item.value}</span>\\n        <span style={{paddingLeft: '10px'}}>Number: {item.number}</span>\\n      </>\\n    )\\n  }\\n  return (\\n    <AutoComplete\\n      placeholder='搜索一个湖人球员' \\n      fetchSuggestions={handleFetch}\\n      onSelect={action('selected')}\\n      renderOption={renderOption}\\n    />\\n  )\\n}\\n\\n (Complete1 as any).storyName = '自动补全input'\\n\\nexport const Complete2: React.FC<AutoCompleteProps> = () => {\\n  const handleFetch = (query: string) => {\\n    return fetch(`https://api.github.com/search/users?q=${query}`)\\n      .then(res => res.json())\\n      .then(({ items }) => {\\n        console.log(items)\\n        return items.length > 0 && Array.isArray(items) ? items.slice(0, 10).map((item: any) => ({ value: item.login, ...item})) : []\\n      })\\n  }\\n\\n  const renderOption = (item: GithubUserProps) => {\\n    return (\\n      <>\\n        <span>Name: {item.login}</span>\\n        <span style={{paddingLeft: '10px'}}>url: {item.url}</span>\\n      </>\\n    )\\n  }\\n  \\n  return (\\n    <AutoComplete\\n      placeholder='搜索一个github的用户名' \\n      fetchSuggestions={handleFetch}\\n      onSelect={action('selected')}\\n      renderOption={renderOption}\\n    />\\n  )\\n}\\n\\n(Complete2 as any).storyName = '异步接口调用';\";// @ts-ignore\nvar __LOCATIONS_MAP__={\"Complete1\":{\"startLoc\":{\"col\":54,\"line\":23},\"endLoc\":{\"col\":1,\"line\":58},\"startBody\":{\"col\":54,\"line\":23},\"endBody\":{\"col\":1,\"line\":58}},\"Complete2\":{\"startLoc\":{\"col\":54,\"line\":62},\"endLoc\":{\"col\":1,\"line\":89},\"startBody\":{\"col\":54,\"line\":62},\"endBody\":{\"col\":1,\"line\":89}}};import React from'react';import{action}from'@storybook/addon-actions';import AutoComplete from'./AutoComplete';export default{title:'Components/AutoComplete',component:AutoComplete};export var Complete1=function Complete1(props){var lakersWithNumber=[{value:'bradley',number:11},{value:'pope',number:1},{value:'caruso',number:4},{value:'cook',number:2},{value:'cousins',number:15},{value:'james',number:23},{value:'AD',number:3},{value:'green',number:14},{value:'howard',number:39},{value:'kuzma',number:0}];var handleFetch=function handleFetch(query){return lakersWithNumber.filter(function(player){return player.value.includes(query);});};var renderOption=function renderOption(item){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Name: \",item.value]}),/*#__PURE__*/_jsxs(\"span\",{style:{paddingLeft:'10px'},children:[\"Number: \",item.number]})]});};return/*#__PURE__*/_jsx(AutoComplete,{placeholder:\"\\u641C\\u7D22\\u4E00\\u4E2A\\u6E56\\u4EBA\\u7403\\u5458\",fetchSuggestions:handleFetch,onSelect:action('selected'),renderOption:renderOption});};Complete1.storyName='自动补全input';export var Complete2=function Complete2(){var handleFetch=function handleFetch(query){return fetch(\"https://api.github.com/search/users?q=\".concat(query)).then(function(res){return res.json();}).then(function(_ref){var items=_ref.items;console.log(items);return items.length>0&&Array.isArray(items)?items.slice(0,10).map(function(item){return _objectSpread({value:item.login},item);}):[];});};var renderOption=function renderOption(item){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Name: \",item.login]}),/*#__PURE__*/_jsxs(\"span\",{style:{paddingLeft:'10px'},children:[\"url: \",item.url]})]});};return/*#__PURE__*/_jsx(AutoComplete,{placeholder:\"\\u641C\\u7D22\\u4E00\\u4E2Agithub\\u7684\\u7528\\u6237\\u540D\",fetchSuggestions:handleFetch,onSelect:action('selected'),renderOption:renderOption});};Complete2.storyName='异步接口调用';Complete1.parameters=_objectSpread({storySource:{source:\"(props) => {\\n\\n  const lakersWithNumber = [\\n    {value: 'bradley', number: 11},\\n    {value: 'pope', number: 1},\\n    {value: 'caruso', number: 4},\\n    {value: 'cook', number: 2},\\n    {value: 'cousins', number: 15},\\n    {value: 'james', number: 23},\\n    {value: 'AD', number: 3},\\n    {value: 'green', number: 14},\\n    {value: 'howard', number: 39},\\n    {value: 'kuzma', number: 0}\\n  ]\\n\\n  const handleFetch = (query: string) => {\\n    return lakersWithNumber.filter(player => player.value.includes(query))\\n  }\\n\\n  const renderOption = (item: lakersProps) => {\\n    return (\\n      <>\\n        <span>Name: {item.value}</span>\\n        <span style={{paddingLeft: '10px'}}>Number: {item.number}</span>\\n      </>\\n    )\\n  }\\n  return (\\n    <AutoComplete\\n      placeholder='搜索一个湖人球员' \\n      fetchSuggestions={handleFetch}\\n      onSelect={action('selected')}\\n      renderOption={renderOption}\\n    />\\n  )\\n}\"}},Complete1.parameters);Complete2.parameters=_objectSpread({storySource:{source:\"() => {\\n  const handleFetch = (query: string) => {\\n    return fetch(`https://api.github.com/search/users?q=${query}`)\\n      .then(res => res.json())\\n      .then(({ items }) => {\\n        console.log(items)\\n        return items.length > 0 && Array.isArray(items) ? items.slice(0, 10).map((item: any) => ({ value: item.login, ...item})) : []\\n      })\\n  }\\n\\n  const renderOption = (item: GithubUserProps) => {\\n    return (\\n      <>\\n        <span>Name: {item.login}</span>\\n        <span style={{paddingLeft: '10px'}}>url: {item.url}</span>\\n      </>\\n    )\\n  }\\n  \\n  return (\\n    <AutoComplete\\n      placeholder='搜索一个github的用户名' \\n      fetchSuggestions={handleFetch}\\n      onSelect={action('selected')}\\n      renderOption={renderOption}\\n    />\\n  )\\n}\"}},Complete2.parameters);","map":{"version":3,"sources":["/Users/licop/Documents/GitHub/LUI/src/components/AutoComplete/AutoCompele.stories.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { action } from '@storybook/addon-actions';\nimport { Story, Meta } from '@storybook/react/types-6-0';\n\nimport AutoComplete, {DataSourceType, AutoCompleteProps} from './AutoComplete';\n\nexport default {\n  title: 'Components/AutoComplete',\n  component: AutoComplete,\n} as Meta;\n\ninterface GithubUserProps {\n  login: string;\n  url: string;\n  avatar_url: string;\n}\n\ninterface lakersProps {\n  value: string,\n  number: 1\n}\n\nexport const Complete1: React.FC<AutoCompleteProps> = (props) => {\n\n  const lakersWithNumber = [\n    {value: 'bradley', number: 11},\n    {value: 'pope', number: 1},\n    {value: 'caruso', number: 4},\n    {value: 'cook', number: 2},\n    {value: 'cousins', number: 15},\n    {value: 'james', number: 23},\n    {value: 'AD', number: 3},\n    {value: 'green', number: 14},\n    {value: 'howard', number: 39},\n    {value: 'kuzma', number: 0}\n  ]\n\n  const handleFetch = (query: string) => {\n    return lakersWithNumber.filter(player => player.value.includes(query))\n  }\n\n  const renderOption = (item: lakersProps) => {\n    return (\n      <>\n        <span>Name: {item.value}</span>\n        <span style={{paddingLeft: '10px'}}>Number: {item.number}</span>\n      </>\n    )\n  }\n  return (\n    <AutoComplete\n      placeholder='搜索一个湖人球员' \n      fetchSuggestions={handleFetch}\n      onSelect={action('selected')}\n      renderOption={renderOption}\n    />\n  )\n}\n\n (Complete1 as any).storyName = '自动补全input'\n\nexport const Complete2: React.FC<AutoCompleteProps> = () => {\n  const handleFetch = (query: string) => {\n    return fetch(`https://api.github.com/search/users?q=${query}`)\n      .then(res => res.json())\n      .then(({ items }) => {\n        console.log(items)\n        return items.length > 0 && Array.isArray(items) ? items.slice(0, 10).map((item: any) => ({ value: item.login, ...item})) : []\n      })\n  }\n\n  const renderOption = (item: GithubUserProps) => {\n    return (\n      <>\n        <span>Name: {item.login}</span>\n        <span style={{paddingLeft: '10px'}}>url: {item.url}</span>\n      </>\n    )\n  }\n  \n  return (\n    <AutoComplete\n      placeholder='搜索一个github的用户名' \n      fetchSuggestions={handleFetch}\n      onSelect={action('selected')}\n      renderOption={renderOption}\n    />\n  )\n}\n\n(Complete2 as any).storyName = '异步接口调用';"]},"metadata":{},"sourceType":"module"}