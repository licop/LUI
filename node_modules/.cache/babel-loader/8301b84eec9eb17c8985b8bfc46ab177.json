{"ast":null,"code":"import _objectSpread from\"/Users/licop/Documents/GitHub/LUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/licop/Documents/GitHub/LUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import{CSSTransition}from'react-transition-group';var Transition=function Transition(props){var children=props.children,classNames=props.classNames,animation=props.animation,wrapper=props.wrapper,restProps=_objectWithoutProperties(props,[\"children\",\"classNames\",\"animation\",\"wrapper\"]);return/*#__PURE__*/_jsx(CSSTransition,_objectSpread(_objectSpread({classNames:classNames?classNames:animation},restProps),{},{children:wrapper?/*#__PURE__*/_jsx(\"div\",{children:children}):children}));};Transition.defaultProps={unmountOnExit:true,appear:true};export default Transition;","map":{"version":3,"sources":["/Users/licop/Documents/GitHub/LUI/src/components/Transition/Transition.tsx"],"names":["React","CSSTransition","Transition","props","children","classNames","animation","wrapper","restProps","defaultProps","unmountOnExit","appear"],"mappings":"8WAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,aAAT,KAA8B,wBAA9B,CAaA,GAAMC,CAAAA,UAAwC,CAAG,QAA3CA,CAAAA,UAA2C,CAACC,KAAD,CAAW,IAEpDC,CAAAA,QAFoD,CAOpDD,KAPoD,CAEpDC,QAFoD,CAGpDC,UAHoD,CAOpDF,KAPoD,CAGpDE,UAHoD,CAIpDC,SAJoD,CAOpDH,KAPoD,CAIpDG,SAJoD,CAKpDC,OALoD,CAOpDJ,KAPoD,CAKpDI,OALoD,CAMjDC,SANiD,0BAOpDL,KAPoD,kDASxD,mBACI,KAAC,aAAD,8BACI,UAAU,CAAKE,UAAU,CAAGA,UAAH,CAAgBC,SAD7C,EAEQE,SAFR,eAIKD,OAAO,cAAG,qBAAMH,QAAN,EAAH,CAA2BA,QAJvC,GADJ,CAQH,CAjBD,CAmBAF,UAAU,CAACO,YAAX,CAA0B,CACtBC,aAAa,CAAE,IADO,CAEtBC,MAAM,CAAE,IAFc,CAA1B,CAKA,cAAeT,CAAAA,UAAf","sourcesContent":["import React from 'react';\nimport { CSSTransition } from 'react-transition-group'\nimport { CSSTransitionProps } from 'react-transition-group/CSSTransition'\n\ntype AnimationName = 'zoom-in-top' | 'zoom-in-left' | 'zoom-in-bottom' | 'zoom-in-right';\n\n/**\n * @wapper: 防止children的transition覆盖动画效果\n */\ntype TransitionProps = CSSTransitionProps & {\n    animation?: AnimationName,\n    wrapper? : boolean, \n}\n\nconst Transition: React.FC<CSSTransitionProps> = (props) => {\n    const {\n        children,\n        classNames,\n        animation,\n        wrapper,\n        ...restProps\n    } = props\n\n    return (\n        <CSSTransition\n            classNames = { classNames ? classNames : animation}\n            {...restProps}\n            >\n            {wrapper ? <div>{children}</div> : children}\n        </CSSTransition>\n    )\n}\n\nTransition.defaultProps = {\n    unmountOnExit: true,\n    appear: true,\n}\n\nexport default Transition"]},"metadata":{},"sourceType":"module"}