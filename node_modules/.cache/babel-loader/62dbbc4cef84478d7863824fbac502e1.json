{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/licop/Documents/GitHub/LUI/src/components/Menu/menu.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext } from 'react';\nimport classNames from 'classnames';\nexport const MenuContext = /*#__PURE__*/createContext({\n  index: 0\n});\n\nconst Menu = props => {\n  _s();\n\n  const {\n    className,\n    mode,\n    style,\n    children,\n    defaultIndex,\n    onSelect\n  } = props;\n  const classes = classNames('lui-menu', className, {\n    'menu-vertical': mode === 'vertical',\n    'menu-horizontal': mode === 'horizontal'\n  });\n  const [currentActive, setActive] = useState(defaultIndex);\n\n  const handleClick = index => {\n    setActive(index);\n\n    if (onSelect) {\n      onSelect(index);\n    }\n  };\n\n  const passContext = {\n    index: currentActive ? currentActive : 0,\n    mode: mode,\n    onSelect: handleClick\n  };\n\n  const renderChildren = () => {\n    return React.Children.map(children, (child, index) => {\n      const childElement = child;\n      const {\n        displayName\n      } = childElement.type;\n      console.log(displayName, 42);\n\n      if (displayName === 'MenuItem' || displayName === 'SubMenu') {\n        return /*#__PURE__*/React.cloneElement(childElement, {\n          index: index\n        });\n      } else {\n        console.error(\"Warning: Menu has a child which is not a MenuItem component\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes,\n    style: style,\n    \"data-testid\": \"test-menu\",\n    children: /*#__PURE__*/_jsxDEV(MenuContext.Provider, {\n      value: passContext,\n      children: renderChildren()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Menu, \"2n8DEesYZ+27vSYoCTaMLXV9rvM=\");\n\n_c = Menu;\nMenu.defaultProps = {\n  defaultIndex: 0,\n  mode: 'horizontal'\n};\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/Users/licop/Documents/GitHub/LUI/src/components/Menu/menu.tsx"],"names":["React","useState","createContext","classNames","MenuContext","index","Menu","props","className","mode","style","children","defaultIndex","onSelect","classes","currentActive","setActive","handleClick","passContext","renderChildren","Children","map","child","childElement","displayName","type","console","log","cloneElement","error","defaultProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,aAAzB,QAA6C,OAA7C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAmBA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,CAAe;AAACG,EAAAA,KAAK,EAAE;AAAR,CAAf,CAAjC;;AAEP,MAAMC,IAAyB,GAAIC,KAAD,IAAW;AAAA;;AACzC,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA,QAAzB;AAAmCC,IAAAA,YAAnC;AAAiDC,IAAAA;AAAjD,MAA6DN,KAAnE;AACA,QAAMO,OAAO,GAAGX,UAAU,CAAC,UAAD,EAAaK,SAAb,EAAwB;AAC9C,qBAAiBC,IAAI,KAAK,UADoB;AAE9C,uBAAmBA,IAAI,KAAK;AAFkB,GAAxB,CAA1B;AAIA,QAAM,CAACM,aAAD,EAAgBC,SAAhB,IAA6Bf,QAAQ,CAACW,YAAD,CAA3C;;AACA,QAAMK,WAAW,GAAIZ,KAAD,IAAmB;AACnCW,IAAAA,SAAS,CAACX,KAAD,CAAT;;AACA,QAAGQ,QAAH,EAAa;AACTA,MAAAA,QAAQ,CAACR,KAAD,CAAR;AACH;AACJ,GALD;;AAMA,QAAMa,WAAyB,GAAG;AAC9Bb,IAAAA,KAAK,EAAEU,aAAa,GAAGA,aAAH,GAAmB,CADT;AAE9BN,IAAAA,IAAI,EAAEA,IAFwB;AAG9BI,IAAAA,QAAQ,EAAEI;AAHoB,GAAlC;;AAMA,QAAME,cAAc,GAAG,MAAM;AACzB,WAAOnB,KAAK,CAACoB,QAAN,CAAeC,GAAf,CAAmBV,QAAnB,EAA6B,CAACW,KAAD,EAAQjB,KAAR,KAAkB;AAClD,YAAMkB,YAAY,GAAGD,KAArB;AACA,YAAM;AAAEE,QAAAA;AAAF,UAAkBD,YAAY,CAACE,IAArC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ,EAAyB,EAAzB;;AACA,UAAGA,WAAW,KAAK,UAAhB,IAA8BA,WAAW,KAAK,SAAjD,EAA4D;AACxD,4BAAOxB,KAAK,CAAC4B,YAAN,CAAmBL,YAAnB,EAAiC;AAAClB,UAAAA,KAAK,EAAEA;AAAR,SAAjC,CAAP;AACH,OAFD,MAEO;AACHqB,QAAAA,OAAO,CAACG,KAAR,CAAc,6DAAd;AACH;AACJ,KATM,CAAP;AAUH,GAXD;;AAaA,sBACI;AAAI,IAAA,SAAS,EAAEf,OAAf;AAAwB,IAAA,KAAK,EAAEJ,KAA/B;AAAsC,mBAAY,WAAlD;AAAA,2BACI,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAEQ,WAA7B;AAAA,gBACKC,cAAc;AADnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAvCD;;GAAMb,I;;KAAAA,I;AAyCNA,IAAI,CAACwB,YAAL,GAAoB;AAChBlB,EAAAA,YAAY,EAAE,CADE;AAEhBH,EAAAA,IAAI,EAAE;AAFU,CAApB;AAKA,eAAeH,IAAf","sourcesContent":["import React, {useState, createContext} from 'react';\nimport classNames from 'classnames';\nimport { MenuItemProps } from './menuItem'\nimport { render } from 'react-dom';\n\ntype MenuMode = 'horizontal' | 'vertical';\ntype SelectCallback = (selectedIndex: number) => void;\n\nexport interface MenuProps {\n    defaultIndex?: number,\n    className?: string,\n    mode?: MenuMode,\n    style?: React.CSSProperties,\n    onSelect?: SelectCallback\n}\ninterface IMenuContext {\n    index: number,\n    mode?: MenuMode\n    onSelect?: SelectCallback\n}\nexport const MenuContext = createContext<IMenuContext>({index: 0});\n\nconst Menu: React.FC<MenuProps> = (props) => {\n    const {className, mode, style, children, defaultIndex, onSelect} = props;\n    const classes = classNames('lui-menu', className, {\n        'menu-vertical': mode === 'vertical',\n        'menu-horizontal': mode === 'horizontal'\n    })\n    const [currentActive, setActive] = useState(defaultIndex);\n    const handleClick = (index: number) => {\n        setActive(index);\n        if(onSelect) {\n            onSelect(index);\n        }\n    }\n    const passContext: IMenuContext = {\n        index: currentActive ? currentActive : 0,\n        mode: mode,\n        onSelect: handleClick,\n        \n    }\n    const renderChildren = () => {\n        return React.Children.map(children, (child, index) => {\n            const childElement = child as React.FunctionComponentElement<MenuItemProps>\n            const { displayName } = childElement.type;\n            console.log(displayName, 42);\n            if(displayName === 'MenuItem' || displayName === 'SubMenu') {\n                return React.cloneElement(childElement, {index: index});\n            } else {\n                console.error(\"Warning: Menu has a child which is not a MenuItem component\")\n            }\n        })\n    }\n\n    return (\n        <ul className={classes} style={style} data-testid=\"test-menu\">\n            <MenuContext.Provider value={passContext}>\n                {renderChildren()}\n            </MenuContext.Provider>\n        </ul>\n    )\n}\n\nMenu.defaultProps = {\n    defaultIndex: 0,\n    mode: 'horizontal'\n}\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}