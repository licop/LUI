[{"/Users/licop/Documents/GitHub/LUI/src/index.tsx":"1","/Users/licop/Documents/GitHub/LUI/src/reportWebVitals.ts":"2","/Users/licop/Documents/GitHub/LUI/src/App.tsx":"3","/Users/licop/Documents/GitHub/LUI/src/components/Button/button.tsx":"4","/Users/licop/Documents/GitHub/LUI/src/components/Menu/menu.tsx":"5","/Users/licop/Documents/GitHub/LUI/src/components/Menu/menuItem.tsx":"6","/Users/licop/Documents/GitHub/LUI/src/components/Menu/subMenu.tsx":"7"},{"size":508,"mtime":1607338266841,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1607328227879,"results":"10","hashOfConfig":"9"},{"size":771,"mtime":1607511057370,"results":"11","hashOfConfig":"9"},{"size":1403,"mtime":1607419979441,"results":"12","hashOfConfig":"9"},{"size":2222,"mtime":1607510730658,"results":"13","hashOfConfig":"9"},{"size":902,"mtime":1607509809271,"results":"14","hashOfConfig":"9"},{"size":2460,"mtime":1607511006817,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"z3ansp",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/licop/Documents/GitHub/LUI/src/index.tsx",[],["33","34"],"/Users/licop/Documents/GitHub/LUI/src/reportWebVitals.ts",[],"/Users/licop/Documents/GitHub/LUI/src/App.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Button/button.tsx",["35"],"import React, { ReactNode } from 'react';\nimport classNames from 'classnames';\n\nexport type ButtonType = 'primary' | 'default' | 'danger' | 'link';\nexport type ButtonSize = 'lg' | 'sm';\n\ninterface BaseButtonProps {\n    classname?: string;\n    disabled?: boolean;\n    size?: ButtonSize;\n    btnType?: ButtonType;\n    children?: React.ReactNode,\n    href?: string\n}\n\ntype NativeButtonProps = BaseButtonProps & React.ButtonHTMLAttributes<HTMLElement>\ntype AnchorButtonProps = BaseButtonProps & React.AnchorHTMLAttributes<HTMLElement>\nexport type ButtonProps = Partial<NativeButtonProps & AnchorButtonProps>\n\nconst Button: React.FC<ButtonProps> = (props) => {\n    const {\n        btnType,\n        disabled,\n        size,\n        classname,\n        children,\n        href,\n        ...restProps\n    } = props;\n\n    const classes = classNames('btn', classname, {\n        [`btn-${btnType}`]: btnType,\n        [`btn-${size}`]: size,\n        'disabled': (btnType === 'link' && disabled)\n    });\n\n    if(btnType === 'link' && href) {\n        return <a \n          href={href}\n          className={classes}\n          {...restProps}\n        >{children}</a>\n    } else {\n    return <button\n           className={classes}\n           disabled={disabled}\n           {...restProps}\n        >{children}\n        </button>\n    }\n}\n\nButton.defaultProps = {\n    disabled: false,\n    btnType: 'default'\n}\n\nexport default Button;",["36","37"],"/Users/licop/Documents/GitHub/LUI/src/components/Menu/menu.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Menu/menuItem.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Menu/subMenu.tsx",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":26},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"@typescript-eslint/no-unused-vars","'ReactNode' is defined but never used.","Identifier","unusedVar",["48"],["49"],"no-global-assign","no-unsafe-negation"]