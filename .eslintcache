[{"/Users/licop/Documents/GitHub/LUI/src/components/AutoComplete/autoCompele.stories.tsx":"1","/Users/licop/Documents/GitHub/LUI/src/components/Button/button.stories.tsx":"2","/Users/licop/Documents/GitHub/LUI/src/components/Input/input.stories.tsx":"3","/Users/licop/Documents/GitHub/LUI/src/components/Menu/menu.stories.tsx":"4","/Users/licop/Documents/GitHub/LUI/src/components/Upload/upload.tsx":"5","/Users/licop/Documents/GitHub/LUI/src/components/Icon/icon.tsx":"6","/Users/licop/Documents/GitHub/LUI/src/components/Upload/uploadList.tsx":"7","/Users/licop/Documents/GitHub/LUI/src/components/Upload/dragger.tsx":"8","/Users/licop/Documents/GitHub/LUI/src/components/Progress/progress.tsx":"9","/Users/licop/Documents/GitHub/LUI/src/components/Menu/subMenu.tsx":"10","/Users/licop/Documents/GitHub/LUI/src/components/Menu/menuItem.tsx":"11","/Users/licop/Documents/GitHub/LUI/src/components/Menu/menu.tsx":"12","/Users/licop/Documents/GitHub/LUI/src/components/Button/button.tsx":"13","/Users/licop/Documents/GitHub/LUI/src/components/Input/input.tsx":"14","/Users/licop/Documents/GitHub/LUI/src/components/AutoComplete/autoComplete.tsx":"15","/Users/licop/Documents/GitHub/LUI/src/components/Transition/transition.tsx":"16","/Users/licop/Documents/GitHub/LUI/src/hooks/useClickOutside.tsx":"17","/Users/licop/Documents/GitHub/LUI/src/hooks/useDebounce.tsx":"18","/Users/licop/Documents/GitHub/LUI/src/index.tsx":"19","/Users/licop/Documents/GitHub/LUI/src/components/Button/index.tsx":"20","/Users/licop/Documents/GitHub/LUI/src/components/Menu/index.tsx":"21","/Users/licop/Documents/GitHub/LUI/src/components/AutoComplete/index.tsx":"22","/Users/licop/Documents/GitHub/LUI/src/components/Icon/index.tsx":"23","/Users/licop/Documents/GitHub/LUI/src/components/Input/index.tsx":"24","/Users/licop/Documents/GitHub/LUI/src/components/Transition/index.tsx":"25","/Users/licop/Documents/GitHub/LUI/src/components/Upload/index.tsx":"26","/Users/licop/Documents/GitHub/LUI/src/components/Progress/index.tsx":"27","/Users/licop/Documents/GitHub/LUI/src/components/Button/Button.tsx":"28","/Users/licop/Documents/GitHub/LUI/src/components/Button/Button.stories.tsx":"29","/Users/licop/Documents/GitHub/LUI/src/components/AutoComplete/AutoCompele.stories.tsx":"30","/Users/licop/Documents/GitHub/LUI/src/components/Input/Input.stories.tsx":"31","/Users/licop/Documents/GitHub/LUI/src/components/AutoComplete/AutoComplete.tsx":"32","/Users/licop/Documents/GitHub/LUI/src/components/Input/Input.tsx":"33","/Users/licop/Documents/GitHub/LUI/src/components/Menu/Menu.stories.tsx":"34","/Users/licop/Documents/GitHub/LUI/src/components/Menu/Menu.tsx":"35","/Users/licop/Documents/GitHub/LUI/src/components/Menu/MenuItem.tsx":"36","/Users/licop/Documents/GitHub/LUI/src/components/Menu/SubMenu.tsx":"37","/Users/licop/Documents/GitHub/LUI/src/components/Icon/Icon.tsx":"38","/Users/licop/Documents/GitHub/LUI/src/components/Transition/Transition.tsx":"39","/Users/licop/Documents/GitHub/LUI/src/components/Upload/Upload.tsx":"40","/Users/licop/Documents/GitHub/LUI/src/components/Upload/UploadList.tsx":"41","/Users/licop/Documents/GitHub/LUI/src/components/Progress/Progress.tsx":"42","/Users/licop/Documents/GitHub/LUI/src/components/Upload/Upload.stories.tsx":"43"},{"size":2312,"mtime":1607848363568,"results":"44","hashOfConfig":"45"},{"size":1209,"mtime":1607848208415,"results":"46","hashOfConfig":"45"},{"size":1489,"mtime":1607848364611,"results":"47","hashOfConfig":"45"},{"size":731,"mtime":1607848817111,"results":"48","hashOfConfig":"45"},{"size":6256,"mtime":1607867445331,"results":"49","hashOfConfig":"45"},{"size":652,"mtime":1607848251455,"results":"50","hashOfConfig":"45"},{"size":1634,"mtime":1607849077850,"results":"51","hashOfConfig":"45"},{"size":872,"mtime":1607685842074,"results":"52","hashOfConfig":"45"},{"size":940,"mtime":1607849039791,"results":"53","hashOfConfig":"45"},{"size":2887,"mtime":1607848778907,"results":"54","hashOfConfig":"45"},{"size":902,"mtime":1607849100226,"results":"55","hashOfConfig":"45"},{"size":2222,"mtime":1607848814731,"results":"56","hashOfConfig":"45"},{"size":1602,"mtime":1607848112764,"results":"57","hashOfConfig":"45"},{"size":1777,"mtime":1607848822450,"results":"58","hashOfConfig":"45"},{"size":4964,"mtime":1607848223578,"results":"59","hashOfConfig":"45"},{"size":934,"mtime":1607849053091,"results":"60","hashOfConfig":"45"},{"size":621,"mtime":1607649095273,"results":"61","hashOfConfig":"45"},{"size":475,"mtime":1607611380037,"results":"62","hashOfConfig":"45"},{"size":595,"mtime":1607691844681,"results":"63","hashOfConfig":"45"},{"size":52,"mtime":1607848139817,"results":"64","hashOfConfig":"45"},{"size":397,"mtime":1607848815857,"results":"65","hashOfConfig":"45"},{"size":71,"mtime":1607848362285,"results":"66","hashOfConfig":"45"},{"size":46,"mtime":1607849812520,"results":"67","hashOfConfig":"45"},{"size":49,"mtime":1607848366876,"results":"68","hashOfConfig":"45"},{"size":64,"mtime":1607849801828,"results":"69","hashOfConfig":"45"},{"size":52,"mtime":1607867451497,"results":"70","hashOfConfig":"45"},{"size":58,"mtime":1607849817169,"results":"71","hashOfConfig":"45"},{"size":1676,"mtime":1607863407943,"results":"72","hashOfConfig":"45"},{"size":397,"mtime":1607852991078,"results":"73","hashOfConfig":"45"},{"size":2328,"mtime":1607858043885,"results":"74","hashOfConfig":"45"},{"size":761,"mtime":1607854262250,"results":"75","hashOfConfig":"45"},{"size":5156,"mtime":1607857583887,"results":"76","hashOfConfig":"45"},{"size":2079,"mtime":1607853797409,"results":"77","hashOfConfig":"45"},{"size":1500,"mtime":1607859085634,"results":"78","hashOfConfig":"45"},{"size":2291,"mtime":1607858206863,"results":"79","hashOfConfig":"45"},{"size":902,"mtime":1607849100226,"results":"80","hashOfConfig":"45"},{"size":2887,"mtime":1607849800014,"results":"81","hashOfConfig":"45"},{"size":652,"mtime":1607848251455,"results":"82","hashOfConfig":"45"},{"size":934,"mtime":1607849053091,"results":"83","hashOfConfig":"45"},{"size":6256,"mtime":1607867445331,"results":"84","hashOfConfig":"45"},{"size":1634,"mtime":1607849798877,"results":"85","hashOfConfig":"45"},{"size":940,"mtime":1607849039791,"results":"86","hashOfConfig":"45"},{"size":1816,"mtime":1607867469971,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},"z3ansp",{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"91"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"107"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"107"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"107"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"107"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"107"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"107"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/licop/Documents/GitHub/LUI/src/components/AutoComplete/autoCompele.stories.tsx",["185","186","187"],"import React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { action } from '@storybook/addon-actions'\nimport AutoComplete, {DataSourceType} from './autoComplete'\ninterface LakerPlayerProps {\n  value: string;\n  number: number;\n}\ninterface GithubUserProps {\n  login: string;\n  url: string;\n  avatar_url: string;\n}\nconst SimpleComplete = () => {\n  const lakers = ['bradley', 'pope', 'caruso', 'cook', 'cousins',\n  'james', 'AD', 'green', 'howard', 'kuzma', 'McGee', 'rando']\n  const lakersWithNumber = [\n    {value: 'bradley', number: 11},\n    {value: 'pope', number: 1},\n    {value: 'caruso', number: 4},\n    {value: 'cook', number: 2},\n    {value: 'cousins', number: 15},\n    {value: 'james', number: 23},\n    {value: 'AD', number: 3},\n    {value: 'green', number: 14},\n    {value: 'howard', number: 39},\n    {value: 'kuzma', number: 0},\n  ]\n  // const handleFetch = (query: string) => {\n  //   return lakers.filter(name => name.includes(query)).map(name => ({value: name}))\n  // }\n  // const handleFetch = (query: string) => {\n  //   return lakersWithNumber.filter(player => player.value.includes(query))\n  // }\n  const handleFetch = (query: string) => {\n    return fetch(`https://api.github.com/search/users?q=${query}`)\n      .then(res => res.json())\n      .then(({ items }) => {\n        console.log(items)\n        return items.length > 0 && Array.isArray(items) ? items.slice(0, 10).map((item: any) => ({ value: item.login, ...item})) : []\n      })\n    // return lakersWithNumber.filter(item => {return item.value.includes(query)});\n  }\n    // const renderOption = (item: any) => {\n    //     // return `${item.value}-${item.number}`;\n    //     return (\n    //         <>\n    //             <h2>name: {item.value}</h2>\n    //             {<p>number: {item.number}</p>}\n    //         </>\n    //     )\n    // }\n\n  const renderOption = (item: DataSourceType) => {\n    const itemWithGithub = item as DataSourceType<GithubUserProps>\n    return (\n      <>\n        <p>Name: {itemWithGithub.value}</p>\n        <p>url: {itemWithGithub.url}</p>\n      </>\n    )\n  }\n  return (\n    <AutoComplete \n      fetchSuggestions={handleFetch}\n      onSelect={action('selected')}\n      renderOption={renderOption}\n    />\n  )\n}\n\nstoriesOf('AutoComplete Component', module)\n  .add('AutoComplete', SimpleComplete)",["188","189"],"/Users/licop/Documents/GitHub/LUI/src/components/Button/button.stories.tsx",["190","191","192","193"],"/Users/licop/Documents/GitHub/LUI/src/components/Input/input.stories.tsx",["194"],"import React, { ChangeEvent, useState } from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { action } from '@storybook/addon-actions'\nimport Input from './input'\nconst ControlledInput = () => {\n  const [value, setValue] = useState('')\n  return <Input value={value} defaultValue={value} onChange={(e) => {setValue(e.target.value)}}/>\n}\nconst defaultInput = () => (\n  <>\n  <Input\n    style={{width: '300px'}}\n    placeholder=\"placeholder\"\n    onChange={action('changed')}\n  />\n  <ControlledInput />\n  </>\n)\nconst disabledInput = () => (\n  <Input\n    style={{width: '300px'}}\n    placeholder=\"disabled input\"\n    disabled \n  />\n)\n\nconst iconInput = () => (\n  <Input\n    style={{width: '300px'}}\n    placeholder=\"input with icon\"\n    icon=\"search\"\n  />  \n)\n\nconst sizeInput = () => (\n  <>\n    <Input\n      style={{width: '300px'}}\n      defaultValue=\"large size\"\n      size=\"lg\"\n    />\n    <Input\n      style={{width: '300px'}}\n      placeholder=\"small size\"\n      size=\"sm\"\n    />\n  </>\n)\n\nconst pandInput = () => (\n  <>\n    <Input\n      style={{width: '300px'}}\n      defaultValue=\"prepend text\"\n      prepend=\"https://\"\n    />\n    <Input\n      style={{width: '300px'}}\n      defaultValue=\"google\"\n      append=\".com\"\n    />\n    \n  </>\n)\n\n\nstoriesOf('Input component', module)\n  .add('Input', defaultInput)\n  .add('被禁用的 Input', disabledInput)\n  .add('带图标的 Input', iconInput)\n  .add('大小不同的 Input', sizeInput)\n  .add('带前后缀的 Input', pandInput)\n","/Users/licop/Documents/GitHub/LUI/src/components/Menu/menu.stories.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Upload/upload.tsx",["195"],"/Users/licop/Documents/GitHub/LUI/src/components/Icon/icon.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Upload/uploadList.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Upload/dragger.tsx",[],["196","197"],"/Users/licop/Documents/GitHub/LUI/src/components/Progress/progress.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Menu/subMenu.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Menu/menuItem.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Menu/menu.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Button/button.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Input/input.tsx",["198"],"/Users/licop/Documents/GitHub/LUI/src/components/AutoComplete/autoComplete.tsx",["199"],"/Users/licop/Documents/GitHub/LUI/src/components/Transition/transition.tsx",["200"],"/Users/licop/Documents/GitHub/LUI/src/hooks/useClickOutside.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/hooks/useDebounce.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/index.tsx",[],["201","202"],"/Users/licop/Documents/GitHub/LUI/src/components/Button/index.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Menu/index.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/AutoComplete/index.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Icon/index.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Input/index.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Transition/index.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Upload/index.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Progress/index.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Button/Button.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Button/Button.stories.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/AutoComplete/AutoCompele.stories.tsx",["203","204"],"import React from 'react';\nimport { action } from '@storybook/addon-actions';\nimport { Story, Meta } from '@storybook/react/types-6-0';\n\nimport AutoComplete, {DataSourceType, AutoCompleteProps} from './AutoComplete';\n\nexport default {\n  title: 'Components/AutoComplete',\n  component: AutoComplete,\n} as Meta;\n\ninterface GithubUserProps {\n  login: string;\n  url: string;\n  avatar_url: string;\n}\n\ninterface lakersProps {\n  value: string,\n  number: 1\n}\n\nexport const Complete1: React.FC<AutoCompleteProps> = (props) => {\n\n  const lakersWithNumber = [\n    {value: 'bradley', number: 11},\n    {value: 'pope', number: 1},\n    {value: 'caruso', number: 4},\n    {value: 'cook', number: 2},\n    {value: 'cousins', number: 15},\n    {value: 'james', number: 23},\n    {value: 'AD', number: 3},\n    {value: 'green', number: 14},\n    {value: 'howard', number: 39},\n    {value: 'kuzma', number: 0}\n  ]\n\n  const handleFetch = (query: string) => {\n    return lakersWithNumber.filter(player => player.value.includes(query))\n  }\n\n  const renderOption = (item: lakersProps) => {\n    return (\n      <>\n        <span>Name: {item.value}</span>\n        <span style={{paddingLeft: '10px'}}>Number: {item.number}</span>\n      </>\n    )\n  }\n  return (\n    <AutoComplete\n      placeholder='搜索一个湖人球员' \n      fetchSuggestions={handleFetch}\n      onSelect={action('selected')}\n      renderOption={renderOption}\n    />\n  )\n}\n\n (Complete1 as any).storyName = '自动补全input'\n\nexport const Complete2: React.FC<AutoCompleteProps> = () => {\n  const handleFetch = (query: string) => {\n    return fetch(`https://api.github.com/search/users?q=${query}`)\n      .then(res => res.json())\n      .then(({ items }) => {\n        console.log(items)\n        return items.length > 0 && Array.isArray(items) ? items.slice(0, 10).map((item: any) => ({ value: item.login, ...item})) : []\n      })\n  }\n\n  const renderOption = (item: GithubUserProps) => {\n    return (\n      <>\n        <span>Name: {item.login}</span>\n        <span style={{paddingLeft: '10px'}}>url: {item.url}</span>\n      </>\n    )\n  }\n  \n  return (\n    <AutoComplete\n      placeholder='搜索一个github的用户名' \n      fetchSuggestions={handleFetch}\n      onSelect={action('selected')}\n      renderOption={renderOption}\n    />\n  )\n}\n\n(Complete2 as any).storyName = '异步接口调用';","/Users/licop/Documents/GitHub/LUI/src/components/Input/Input.stories.tsx",["205"],"import React, { useState } from 'react'\nimport { Story, Meta } from '@storybook/react/types-6-0';\nimport Input, {InputProps} from './Input'\n\nexport default {\n  title: 'Components/Input',\n  component: Input,\n} as Meta;\n\nconst Template: Story<InputProps> = (args) => <Input {...args} />;\n\nexport const 常规_Input = Template.bind({});\n常规_Input.args = {\n  style: {width: '300px'},\n  placeholder: \"placeholder\"\n};\n\nexport const 带图标的_Input = Template.bind({});\n带图标的_Input.args = {\n  style: {width: '300px'},\n  placeholder: \"input with icon\",\n  icon: \"search\"\n};\n\nexport const 带前后缀的_Input = Template.bind({});\n带前后缀的_Input.args = {\n  style: {width: '300px'},\n  placeholder: \"google\",\n  prepend: \"https://\",\n  append: \".com\"\n};\n","/Users/licop/Documents/GitHub/LUI/src/components/AutoComplete/AutoComplete.tsx",["206"],"import React, { FC, useState, ChangeEvent, KeyboardEvent, ReactElement, useEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport Input, { InputProps } from '../Input/Input';\nimport Icon from '../Icon/Icon';\nimport useDebounce from '../../hooks/useDebounce'\nimport useClickOutside from '../../hooks/useClickOutside';\nimport Transition from '../Transition/Transition';\n\ninterface DataSourceObject {\n    value: string\n}\nexport type DataSourceType<T = {}> = T & DataSourceObject;\n\nexport interface AutoCompleteProps extends Omit<InputProps, 'onSelect'> {\n    /**\n     * 获取数据函数，可以返回数组或者Promise对象\n     */\n    fetchSuggestions: (str: string) => DataSourceType[] | Promise<DataSourceType[]>,\n    /**\n     * 选中时回调函数\n     */\n    onSelect?: (str: DataSourceType) => void,\n    /**\n     * 渲染单列选项函数\n     */\n    renderOption?: (str: any) => ReactElement | string\n}\n/**\n * 自动补全Input\n */\nconst AutoComplete: FC<AutoCompleteProps> = (props) => {\n    const {\n        fetchSuggestions,\n        onSelect,\n        value,\n        renderOption,\n        ...restProps\n    } = props;\n    const [isLoading, setLoading] = useState(false)\n    const [inputValue,  setInputValue] = useState(value as string);\n    const [suggestions, setSuggestions] = useState<DataSourceType[]>([]);\n    const [highlightIndex, setHighlightIndex] = useState(-1)\n    const [ showDropdown, setShowDropdown] = useState(false)\n    const debounceValue = useDebounce(inputValue, 500);\n    const triggerSearch = useRef(false);\n    const componentRef = useRef<HTMLDivElement>(null);\n\n    const handleSelect = (item: DataSourceType) => {\n        setInputValue(item.value)\n        setShowDropdown(false)\n        if (onSelect) {\n          onSelect(item)\n        }\n        triggerSearch.current = false;\n    }\n    useClickOutside(componentRef, () => {setSuggestions([])});\n    useEffect(() => {\n        if(debounceValue && triggerSearch.current) {\n            const results = fetchSuggestions(debounceValue);\n            if(results instanceof Promise) {\n                setLoading(true);\n                results.then(data => {\n                    setLoading(false);\n                    setSuggestions(data);\n\n                    if (data.length > 0) {\n                        setShowDropdown(true)\n                    }\n                })\n            } else {\n                setSuggestions(results);\n                if (results.length > 0) {\n                    setShowDropdown(true)\n                }\n            }\n        } else {\n            setShowDropdown(false)\n        }\n        setHighlightIndex(-1);\n    }, [debounceValue])\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const value = e.target.value.trim();\n        setInputValue(value);\n        triggerSearch.current = true;\n    }\n    \n    const highlight = (index: number) => {\n        if(index < 0) index = 0;\n        if(index >= suggestions.length) {\n            index = suggestions.length - 1;\n        }\n        setHighlightIndex(index);\n    }\n\n    const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n        switch(e.keyCode) {\n            case 13: \n                if(suggestions[highlightIndex]) {\n                    handleSelect(suggestions[highlightIndex])\n                }\n                break;\n            case 38:\n                highlight(highlightIndex - 1)\n                break;\n            case 40: \n                highlight(highlightIndex + 1)\n                break;\n            case 27:\n                setShowDropdown(false)\n                break;\n            default:\n                break;\n\n        }\n    }\n\n    const generateDropdown = () => {\n        return (\n            <Transition\n                in={showDropdown || isLoading}\n                animation=\"zoom-in-top\"\n                timeout={300}\n                onExited={() => {setSuggestions([])}}\n            >\n                <ul className=\"lui-suggestion-list\">\n                    { isLoading &&\n                        <div className=\"suggstions-loading-icon\">\n                            <Icon icon=\"spinner\" spin/>\n                        </div>\n                    }\n                    {suggestions.map((item, index) => {\n                        const cnames = classNames('suggestion-item', {\n                            'is-active': index === highlightIndex\n                        })\n                        return <li key={index} className={cnames} onClick={() => handleSelect(item)}>\n                            {renderTemplate(item)}\n                        </li>\n                    })}\n                </ul>\n            </Transition> \n        )\n    }\n\n    const renderTemplate = (item: any) => {\n        return renderOption ? renderOption(item) : item.value;\n    }\n\n    return (\n        <div className=\"lui-auto-complete\" ref={componentRef}>\n            <Input \n                value={inputValue}\n                onChange={handleChange}\n                onKeyDown={handleKeyDown}\n                {...restProps}\n            />\n            \n            {generateDropdown()}\n        </div>\n    )\n}\n\nexport default AutoComplete;\n","/Users/licop/Documents/GitHub/LUI/src/components/Input/Input.tsx",["207"],"import React, {ChangeEvent, ReactElement, InputHTMLAttributes, HTMLAttributes} from 'react';\nimport classNames from 'classnames';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core'\nimport Icon from '../Icon/Icon'\n\ntype InputSize = 'lg' | 'sm';\nexport interface InputProps extends Omit<InputHTMLAttributes<HTMLElement>, 'size'> {\n    /**\n     * 禁用状态\n     */\n    disabled?: boolean,\n    /**\n     * 设置输入框大小\n     */\n    size?: InputSize,\n    /**\n     * 添加icon\n     */\n    icon?: IconProp,\n    /**\n     * 带有前缀图标的 input\t\n     */\n    prepend?: string | ReactElement,\n    /**\n     * \t带有后缀图标的 input\n     */\n    append?: string | ReactElement,\n    /**\n     * 输入框内容变化时的回调\n     */\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => void\n}\n\n/**\n * Input输入框\n */\nconst Input: React.FC<InputProps> = (props) => {\n    const {\n       disabled,\n       size,\n       icon,\n       prepend,\n       append,\n       style,\n       ...restProps\n    } = props;\n    const cnames = classNames('lui-input-wrapper',  {\n       [`input-size-${size}`]: size,\n        'is-disabled': disabled,\n        'input-group': prepend || append,\n        'input-group-append': !!append,\n        'input-group-prepend': !!prepend\n    })\n   \n    const fixControlledValue = (value: any) => {\n        if(value === null || value === undefined) {\n            return ''\n        }\n        return value;\n    }\n\n    if('value' in props) {\n       delete restProps.defaultValue;\n       restProps.value = fixControlledValue(restProps.value)\n    }\n\n   return (\n       <div className={cnames} style={style}>\n           {prepend && <div className=\"lui-input-group-prepend\">{prepend}</div>}\n           {icon && <div className=\"icon-wrapper\"><Icon icon={icon} title={`title-${icon}`}/></div>}\n           <input\n              className=\"lui-input-inner\"\n              disabled={disabled}\n              {...restProps}\n           />\n           {append && <div className=\"lui-input-group-append\">{append}</div>}\n       </div>\n   )\n} \n\nexport default Input;\n","/Users/licop/Documents/GitHub/LUI/src/components/Menu/Menu.stories.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Menu/Menu.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Menu/MenuItem.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Menu/SubMenu.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Icon/Icon.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Transition/Transition.tsx",["208"],"import React from 'react';\nimport { CSSTransition } from 'react-transition-group'\nimport { CSSTransitionProps } from 'react-transition-group/CSSTransition'\n\ntype AnimationName = 'zoom-in-top' | 'zoom-in-left' | 'zoom-in-bottom' | 'zoom-in-right';\n\n/**\n * @wapper: 防止children的transition覆盖动画效果\n */\ntype TransitionProps = CSSTransitionProps & {\n    animation?: AnimationName,\n    wrapper? : boolean, \n}\n\nconst Transition: React.FC<CSSTransitionProps> = (props) => {\n    const {\n        children,\n        classNames,\n        animation,\n        wrapper,\n        ...restProps\n    } = props\n\n    return (\n        <CSSTransition\n            classNames = { classNames ? classNames : animation}\n            {...restProps}\n            >\n            {wrapper ? <div>{children}</div> : children}\n        </CSSTransition>\n    )\n}\n\nTransition.defaultProps = {\n    unmountOnExit: true,\n    appear: true,\n}\n\nexport default Transition","/Users/licop/Documents/GitHub/LUI/src/components/Upload/Upload.tsx",["209"],"import React, {useState, useEffect, useRef, ChangeEvent} from 'react';\nimport axios from 'axios';\nimport Dragger from './dragger';\nimport UploadList from './UploadList'\n\ntype UploadFileStatus = 'ready' | 'uploading' | 'success' | 'error';\nexport interface UploadFile {\n    uid: string;\n    size: number;\n    name: string;\n    status?: UploadFileStatus;\n    percent?: number;\n    raw?: File;\n    response?: any;\n    error?: any;  \n}\n\nexport interface UploadProps {\n    /**\n     * 文件上传的目标路径地址\n     */\n    action: string;\n    /**\n     * 默认文件列表\n     */\n    defaultFileList?: UploadFile[];\n    /**\n     * 文件上传前回调函数\n     */\n    beforeUpload?: (file: File) => boolean | Promise<File>;\n    /**\n     * 上传过程中回调\n     */\n    onProgress?: (percentage: number, file: File) => void;\n    /**\n     * 文件上传成功回调\n     */\n    onSuccess?: (data: any, file: File) => void;\n    /**\n     * 文件上传失误回调\n     */\n    onError?: (err: any, file: File) => void;\n    /**\n     * 状态改变时回调\n     */\n    onChange?: (file: File) => void;\n    /**\n     * 移除文件时回调\n     */\n    onRemove?: (file: UploadFile) => void;\n    /**\n     * 是否传递cookie\n     */\n    withCredentials?: boolean;\n    /**\n     * 请求头部设置\n     */\n    headers?: {[key: string]: any};\n    /**\n     * 上传文件名称\n     */\n    name?: string;\n    /**\n     * 上传时传递数据\n     */\n    data?: {[key: string]: any};\n    /**\n     * 接受文件类型\n     */\n    accept?: string\n    /**\n     * 是否支持多文件同时上传\n     */\n    multiple?: boolean\n    /**\n     * 是否支持拖动上传\n     */\n    drag?: boolean\n}\n/**\n * 上传文件组件\n */\nconst Upload: React.FC<UploadProps> = (props) => {\n    const {\n        action,\n        defaultFileList,\n        onProgress,\n        onSuccess,\n        onError,\n        beforeUpload,\n        onChange,\n        onRemove,\n        withCredentials,\n        headers,\n        data,\n        name,\n        accept,\n        multiple,\n        children,\n        drag\n    } = props;\n    const fileInput = useRef<HTMLInputElement>(null);\n    const [fileList, setFileList] = useState<UploadFile[]>(defaultFileList || []);\n\n    const uploadFileList = (uploadFile: UploadFile, uploadObj: Partial<UploadFile>) => {\n        setFileList(prevList => {\n            return prevList.map(file => {\n                if(file.uid === uploadFile.uid) {\n                    return {...file, ...uploadObj}\n                } else {\n                    return file;\n                }\n            })\n        })\n    }\n    \n    const handleClick = () => {\n        if(fileInput.current) {\n            fileInput.current.click()\n        } \n    }\n    \n    const uploadFiles = (files: FileList) => {\n        let postFiles = Array.from(files);\n        postFiles.forEach(file => {\n            if(!beforeUpload) {\n                post(file)\n            } else {\n                const result = beforeUpload(file);\n                if(result && result instanceof Promise) {\n                    result.then(processFile => {\n                        post(processFile)\n                    }) \n                } else if(result !== false) {\n                    post(file);\n                }\n            }\n        })\n    }\n    \n    const post = (file: File) => {\n        const formData = new FormData();\n        let _file: UploadFile = {\n            uid: Date.now() + 'upload-file',\n            status: 'ready',\n            name: file.name,\n            size: file.size,\n            percent: 0,\n            raw: file\n        }\n        setFileList(prevList => {\n            return [_file, ...prevList]\n        })\n        formData.append(name || 'file', file);\n        if(data) {\n            Object.keys(data).forEach(key => {\n                formData.append(key, data[key]);\n            })\n        }\n        axios.post(action, formData, {\n            headers: {\n                ...headers,\n                'Content-Type': 'multipart/form-data' \n            },\n            withCredentials,\n            onUploadProgress: (e) => {\n                let percentage = Math.round((e.loaded * 100) / e.total) || 0;\n                if(percentage < 100 ) {\n                    uploadFileList(_file, {percent: percentage, status: 'uploading'});\n                    if(onProgress) {\n                        onProgress(percentage, file);\n                    }\n                }\n            }\n        }).then(resp => {\n            uploadFileList(_file, {status: 'success', response: resp.data})\n            \n            if(onSuccess) {\n                onSuccess(resp.data, file);\n            }\n            if(onChange) {\n                onChange(file);\n            }\n        }).catch(err => {\n            uploadFileList(_file, {status: 'error', error: err})\n            if(onError) {\n                onError(err, file);\n            }\n            if(onChange) {\n                onChange(file);\n            }\n        })\n\n    }\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const files = e.target.files;\n        if(!files) {\n            return;\n        }\n        uploadFiles(files);\n        if(fileInput.current) {\n            fileInput.current.value = ''\n        }\n    }\n    const handleRemove = (file: UploadFile) => {\n        setFileList(prevList => {\n            return prevList.filter(item => item.uid !== file.uid)\n        });\n        if(onRemove) {\n            onRemove(file);\n        }\n    }\n\n    return <div className=\"lui-upload-component\">\n        <div \n            className=\"lui-upload-input\"\n            onClick={handleClick}\n        >   \n            {drag ? \n                <Dragger onFile={(files) => {uploadFiles(files)}}>\n                    {children}\n                </Dragger>:\n                children\n            }\n            <input\n                className=\"lui-file-input\"\n                style={{display: 'none'}}\n                onChange={handleChange}\n                type='file'\n                ref={fileInput}\n                accept={accept}\n                multiple={multiple}\n            />\n        </div>\n        <UploadList \n            fileList={fileList}\n            onRemove={handleRemove}\n        />\n    </div>\n}\n\n\n\nexport default Upload;\n","/Users/licop/Documents/GitHub/LUI/src/components/Upload/UploadList.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Progress/Progress.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Upload/Upload.stories.tsx",["210"],{"ruleId":"211","severity":1,"message":"212","line":5,"column":11,"nodeType":"213","messageId":"214","endLine":5,"endColumn":27},{"ruleId":"211","severity":1,"message":"215","line":15,"column":9,"nodeType":"213","messageId":"214","endLine":15,"endColumn":15},{"ruleId":"211","severity":1,"message":"216","line":17,"column":9,"nodeType":"213","messageId":"214","endLine":17,"endColumn":25},{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"211","severity":1,"message":"221","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},{"ruleId":"211","severity":1,"message":"222","line":1,"column":27,"nodeType":"213","messageId":"214","endLine":1,"endColumn":36},{"ruleId":"211","severity":1,"message":"223","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":19},{"ruleId":"211","severity":1,"message":"224","line":4,"column":10,"nodeType":"213","messageId":"214","endLine":4,"endColumn":16},{"ruleId":"211","severity":1,"message":"225","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":28},{"ruleId":"211","severity":1,"message":"226","line":1,"column":26,"nodeType":"213","messageId":"214","endLine":1,"endColumn":35},{"ruleId":"217","replacedBy":"227"},{"ruleId":"219","replacedBy":"228"},{"ruleId":"211","severity":1,"message":"229","line":1,"column":64,"nodeType":"213","messageId":"214","endLine":1,"endColumn":78},{"ruleId":"230","severity":1,"message":"231","line":69,"column":8,"nodeType":"232","endLine":69,"endColumn":23,"suggestions":"233"},{"ruleId":"211","severity":1,"message":"234","line":10,"column":6,"nodeType":"213","messageId":"214","endLine":10,"endColumn":21},{"ruleId":"217","replacedBy":"235"},{"ruleId":"219","replacedBy":"236"},{"ruleId":"211","severity":1,"message":"237","line":3,"column":10,"nodeType":"213","messageId":"214","endLine":3,"endColumn":15},{"ruleId":"211","severity":1,"message":"238","line":5,"column":23,"nodeType":"213","messageId":"214","endLine":5,"endColumn":37},{"ruleId":"211","severity":1,"message":"239","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},{"ruleId":"230","severity":1,"message":"231","line":80,"column":8,"nodeType":"232","endLine":80,"endColumn":23,"suggestions":"240"},{"ruleId":"211","severity":1,"message":"229","line":1,"column":64,"nodeType":"213","messageId":"214","endLine":1,"endColumn":78},{"ruleId":"211","severity":1,"message":"234","line":10,"column":6,"nodeType":"213","messageId":"214","endLine":10,"endColumn":21},{"ruleId":"211","severity":1,"message":"226","line":1,"column":26,"nodeType":"213","messageId":"214","endLine":1,"endColumn":35},{"ruleId":"211","severity":1,"message":"241","line":15,"column":7,"nodeType":"213","messageId":"214","endLine":15,"endColumn":20},"@typescript-eslint/no-unused-vars","'LakerPlayerProps' is defined but never used.","Identifier","unusedVar","'lakers' is assigned a value but never used.","'lakersWithNumber' is assigned a value but never used.","no-native-reassign",["242"],"no-negated-in-lhs",["243"],"'Children' is defined but never used.","'Component' is defined but never used.","'storiesOf' is defined but never used.","'action' is defined but never used.","'ChangeEvent' is defined but never used.","'useEffect' is defined but never used.",["242"],["243"],"'HTMLAttributes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchSuggestions'. Either include it or remove the dependency array.","ArrayExpression",["244"],"'TransitionProps' is defined but never used.",["242"],["243"],"'Story' is defined but never used.","'DataSourceType' is defined but never used.","'useState' is defined but never used.",["245"],"'checkFileSize' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"246","fix":"247"},{"desc":"246","fix":"248"},"Update the dependencies array to be: [debounceValue, fetchSuggestions]",{"range":"249","text":"250"},{"range":"251","text":"250"},[2456,2471],"[debounceValue, fetchSuggestions]",[2576,2591]]