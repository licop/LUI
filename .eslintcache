[{"/Users/licop/Documents/GitHub/LUI/src/index.tsx":"1","/Users/licop/Documents/GitHub/LUI/src/reportWebVitals.ts":"2","/Users/licop/Documents/GitHub/LUI/src/App.tsx":"3","/Users/licop/Documents/GitHub/LUI/src/components/Button/button.tsx":"4","/Users/licop/Documents/GitHub/LUI/src/components/Menu/menu.tsx":"5","/Users/licop/Documents/GitHub/LUI/src/components/Menu/menuItem.tsx":"6","/Users/licop/Documents/GitHub/LUI/src/components/Menu/subMenu.tsx":"7","/Users/licop/Documents/GitHub/LUI/src/components/Icon/icon.tsx":"8","/Users/licop/Documents/GitHub/LUI/src/components/Transition/transition.tsx":"9","/Users/licop/Documents/GitHub/LUI/src/stories/Button.stories.tsx":"10","/Users/licop/Documents/GitHub/LUI/src/stories/Button.tsx":"11","/Users/licop/Documents/GitHub/LUI/src/stories/Page.stories.tsx":"12","/Users/licop/Documents/GitHub/LUI/src/stories/Header.stories.tsx":"13","/Users/licop/Documents/GitHub/LUI/src/stories/Header.tsx":"14","/Users/licop/Documents/GitHub/LUI/src/stories/Page.tsx":"15","/Users/licop/Documents/GitHub/LUI/src/components/Button/button.stories.tsx":"16","/Users/licop/Documents/GitHub/LUI/src/components/Input/input.stories.tsx":"17","/Users/licop/Documents/GitHub/LUI/src/components/Input/input.tsx":"18","/Users/licop/Documents/GitHub/LUI/src/components/AutoComplete/autoCompele.stories.tsx":"19","/Users/licop/Documents/GitHub/LUI/src/components/AutoComplete/autoComplete.tsx":"20","/Users/licop/Documents/GitHub/LUI/src/hooks/useDebounce.tsx":"21","/Users/licop/Documents/GitHub/LUI/src/hooks/useClickOutside.tsx":"22","/Users/licop/Documents/GitHub/LUI/src/components/Menu/menu.stories.tsx":"23","/Users/licop/Documents/GitHub/LUI/src/components/Upload/unload.stories.tsx":"24","/Users/licop/Documents/GitHub/LUI/src/components/Upload/upload.tsx":"25","/Users/licop/Documents/GitHub/LUI/src/components/Upload/uploadList.tsx":"26","/Users/licop/Documents/GitHub/LUI/src/components/Progress/progress.tsx":"27","/Users/licop/Documents/GitHub/LUI/src/components/Upload/dragger.tsx":"28"},{"size":508,"mtime":1607338266841,"results":"29","hashOfConfig":"30"},{"size":425,"mtime":1607328227879,"results":"31","hashOfConfig":"30"},{"size":1271,"mtime":1607661025309,"results":"32","hashOfConfig":"30"},{"size":1403,"mtime":1607419979441,"results":"33","hashOfConfig":"30"},{"size":2222,"mtime":1607510730658,"results":"34","hashOfConfig":"30"},{"size":902,"mtime":1607509809271,"results":"35","hashOfConfig":"30"},{"size":2887,"mtime":1607567322547,"results":"36","hashOfConfig":"30"},{"size":652,"mtime":1607562127871,"results":"37","hashOfConfig":"30"},{"size":934,"mtime":1607567979876,"results":"38","hashOfConfig":"30"},{"size":804,"mtime":1607569655721,"results":"39","hashOfConfig":"30"},{"size":941,"mtime":1607569655722,"results":"40","hashOfConfig":"30"},{"size":605,"mtime":1607569655723,"results":"41","hashOfConfig":"30"},{"size":510,"mtime":1607569655722,"results":"42","hashOfConfig":"30"},{"size":1356,"mtime":1607569655723,"results":"43","hashOfConfig":"30"},{"size":2415,"mtime":1607569655723,"results":"44","hashOfConfig":"30"},{"size":787,"mtime":1607572112944,"results":"45","hashOfConfig":"30"},{"size":1489,"mtime":1607588698832,"results":"46","hashOfConfig":"30"},{"size":1777,"mtime":1607588807753,"results":"47","hashOfConfig":"30"},{"size":2312,"mtime":1607612891231,"results":"48","hashOfConfig":"30"},{"size":5001,"mtime":1607616791837,"results":"49","hashOfConfig":"30"},{"size":475,"mtime":1607611380037,"results":"50","hashOfConfig":"30"},{"size":621,"mtime":1607649095273,"results":"51","hashOfConfig":"30"},{"size":731,"mtime":1607615872023,"results":"52","hashOfConfig":"30"},{"size":1431,"mtime":1607685882520,"results":"53","hashOfConfig":"30"},{"size":5528,"mtime":1607685998571,"results":"54","hashOfConfig":"30"},{"size":1634,"mtime":1607680416582,"results":"55","hashOfConfig":"30"},{"size":940,"mtime":1607679032948,"results":"56","hashOfConfig":"30"},{"size":872,"mtime":1607685842074,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"z3ansp",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/licop/Documents/GitHub/LUI/src/index.tsx",[],["122","123"],"/Users/licop/Documents/GitHub/LUI/src/reportWebVitals.ts",[],"/Users/licop/Documents/GitHub/LUI/src/App.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Button/button.tsx",["124"],"import React, { ReactNode } from 'react';\nimport classNames from 'classnames';\n\nexport type ButtonType = 'primary' | 'default' | 'danger' | 'link';\nexport type ButtonSize = 'lg' | 'sm';\n\ninterface BaseButtonProps {\n    classname?: string;\n    disabled?: boolean;\n    size?: ButtonSize;\n    btnType?: ButtonType;\n    children?: React.ReactNode,\n    href?: string\n}\n\ntype NativeButtonProps = BaseButtonProps & React.ButtonHTMLAttributes<HTMLElement>\ntype AnchorButtonProps = BaseButtonProps & React.AnchorHTMLAttributes<HTMLElement>\nexport type ButtonProps = Partial<NativeButtonProps & AnchorButtonProps>\n\nconst Button: React.FC<ButtonProps> = (props) => {\n    const {\n        btnType,\n        disabled,\n        size,\n        classname,\n        children,\n        href,\n        ...restProps\n    } = props;\n\n    const classes = classNames('btn', classname, {\n        [`btn-${btnType}`]: btnType,\n        [`btn-${size}`]: size,\n        'disabled': (btnType === 'link' && disabled)\n    });\n\n    if(btnType === 'link' && href) {\n        return <a \n          href={href}\n          className={classes}\n          {...restProps}\n        >{children}</a>\n    } else {\n    return <button\n           className={classes}\n           disabled={disabled}\n           {...restProps}\n        >{children}\n        </button>\n    }\n}\n\nButton.defaultProps = {\n    disabled: false,\n    btnType: 'default'\n}\n\nexport default Button;",["125","126"],"/Users/licop/Documents/GitHub/LUI/src/components/Menu/menu.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Menu/menuItem.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Menu/subMenu.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Icon/icon.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Transition/transition.tsx",["127"],"import React from 'react';\nimport { CSSTransition } from 'react-transition-group'\nimport { CSSTransitionProps } from 'react-transition-group/CSSTransition'\n\ntype AnimationName = 'zoom-in-top' | 'zoom-in-left' | 'zoom-in-bottom' | 'zoom-in-right';\n\n/**\n * @wapper: 防止children的transition覆盖动画效果\n */\ntype TransitionProps = CSSTransitionProps & {\n    animation?: AnimationName,\n    wrapper? : boolean, \n}\n\nconst Transition: React.FC<CSSTransitionProps> = (props) => {\n    const {\n        children,\n        classNames,\n        animation,\n        wrapper,\n        ...restProps\n    } = props\n\n    return (\n        <CSSTransition\n            classNames = { classNames ? classNames : animation}\n            {...restProps}\n            >\n            {wrapper ? <div>{children}</div> : children}\n        </CSSTransition>\n    )\n}\n\nTransition.defaultProps = {\n    unmountOnExit: true,\n    appear: true,\n}\n\nexport default Transition","/Users/licop/Documents/GitHub/LUI/src/stories/Button.stories.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/stories/Button.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/stories/Page.stories.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/stories/Header.stories.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/stories/Header.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/stories/Page.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Button/button.stories.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Input/input.stories.tsx",["128"],"import React, { ChangeEvent, useState } from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { action } from '@storybook/addon-actions'\nimport Input from './input'\nconst ControlledInput = () => {\n  const [value, setValue] = useState('')\n  return <Input value={value} defaultValue={value} onChange={(e) => {setValue(e.target.value)}}/>\n}\nconst defaultInput = () => (\n  <>\n  <Input\n    style={{width: '300px'}}\n    placeholder=\"placeholder\"\n    onChange={action('changed')}\n  />\n  <ControlledInput />\n  </>\n)\nconst disabledInput = () => (\n  <Input\n    style={{width: '300px'}}\n    placeholder=\"disabled input\"\n    disabled \n  />\n)\n\nconst iconInput = () => (\n  <Input\n    style={{width: '300px'}}\n    placeholder=\"input with icon\"\n    icon=\"search\"\n  />  \n)\n\nconst sizeInput = () => (\n  <>\n    <Input\n      style={{width: '300px'}}\n      defaultValue=\"large size\"\n      size=\"lg\"\n    />\n    <Input\n      style={{width: '300px'}}\n      placeholder=\"small size\"\n      size=\"sm\"\n    />\n  </>\n)\n\nconst pandInput = () => (\n  <>\n    <Input\n      style={{width: '300px'}}\n      defaultValue=\"prepend text\"\n      prepend=\"https://\"\n    />\n    <Input\n      style={{width: '300px'}}\n      defaultValue=\"google\"\n      append=\".com\"\n    />\n    \n  </>\n)\n\n\nstoriesOf('Input component', module)\n  .add('Input', defaultInput)\n  .add('被禁用的 Input', disabledInput)\n  .add('带图标的 Input', iconInput)\n  .add('大小不同的 Input', sizeInput)\n  .add('带前后缀的 Input', pandInput)\n","/Users/licop/Documents/GitHub/LUI/src/components/Input/input.tsx",["129"],"import React, {ChangeEvent, ReactElement, InputHTMLAttributes, HTMLAttributes} from 'react';\nimport classNames from 'classnames';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core'\nimport Icon from '../Icon/icon'\n\ntype InputSize = 'lg' | 'sm';\nexport interface InputProps extends Omit<InputHTMLAttributes<HTMLElement>, 'size'> {\n    disabled?: boolean,\n    size?: InputSize,\n    icon?: IconProp,\n    prepend?: string | ReactElement,\n    append?: string | ReactElement,\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => void\n}\n\nconst Input: React.FC<InputProps> = (props) => {\n    const {\n       disabled,\n       size,\n       icon,\n       prepend,\n       append,\n       style,\n       ...restProps\n    } = props;\n    const cnames = classNames('lui-input-wrapper',  {\n       [`input-size-${size}`]: size,\n        'is-disabled': disabled,\n        'input-group': prepend || append,\n        'input-group-append': !!append,\n        'input-group-prepend': !!prepend\n    })\n   \n    const fixControlledValue = (value: any) => {\n        if(value === null || value === undefined) {\n            return ''\n        }\n        return value;\n    }\n\n    if('value' in props) {\n       delete restProps.defaultValue;\n       restProps.value = fixControlledValue(restProps.value)\n    }\n\n   return (\n       <div className={cnames} style={style}>\n           {prepend && <div className=\"lui-input-group-prepend\">{prepend}</div>}\n           {icon && <div className=\"icon-wrapper\"><Icon icon={icon} title={`title-${icon}`}/></div>}\n           <input\n              className=\"lui-input-inner\"\n              disabled={disabled}\n              {...restProps}\n           />\n           {append && <div className=\"lui-input-group-append\">{append}</div>}\n       </div>\n   )\n} \n\nexport default Input;\n","/Users/licop/Documents/GitHub/LUI/src/components/AutoComplete/autoCompele.stories.tsx",["130","131","132"],"import React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { action } from '@storybook/addon-actions'\nimport AutoComplete, {DataSourceType} from './autoComplete'\ninterface LakerPlayerProps {\n  value: string;\n  number: number;\n}\ninterface GithubUserProps {\n  login: string;\n  url: string;\n  avatar_url: string;\n}\nconst SimpleComplete = () => {\n  const lakers = ['bradley', 'pope', 'caruso', 'cook', 'cousins',\n  'james', 'AD', 'green', 'howard', 'kuzma', 'McGee', 'rando']\n  const lakersWithNumber = [\n    {value: 'bradley', number: 11},\n    {value: 'pope', number: 1},\n    {value: 'caruso', number: 4},\n    {value: 'cook', number: 2},\n    {value: 'cousins', number: 15},\n    {value: 'james', number: 23},\n    {value: 'AD', number: 3},\n    {value: 'green', number: 14},\n    {value: 'howard', number: 39},\n    {value: 'kuzma', number: 0},\n  ]\n  // const handleFetch = (query: string) => {\n  //   return lakers.filter(name => name.includes(query)).map(name => ({value: name}))\n  // }\n  // const handleFetch = (query: string) => {\n  //   return lakersWithNumber.filter(player => player.value.includes(query))\n  // }\n  const handleFetch = (query: string) => {\n    return fetch(`https://api.github.com/search/users?q=${query}`)\n      .then(res => res.json())\n      .then(({ items }) => {\n        console.log(items)\n        return items.length > 0 && Array.isArray(items) ? items.slice(0, 10).map((item: any) => ({ value: item.login, ...item})) : []\n      })\n    // return lakersWithNumber.filter(item => {return item.value.includes(query)});\n  }\n    // const renderOption = (item: any) => {\n    //     // return `${item.value}-${item.number}`;\n    //     return (\n    //         <>\n    //             <h2>name: {item.value}</h2>\n    //             {<p>number: {item.number}</p>}\n    //         </>\n    //     )\n    // }\n\n  const renderOption = (item: DataSourceType) => {\n    const itemWithGithub = item as DataSourceType<GithubUserProps>\n    return (\n      <>\n        <p>Name: {itemWithGithub.value}</p>\n        <p>url: {itemWithGithub.url}</p>\n      </>\n    )\n  }\n  return (\n    <AutoComplete \n      fetchSuggestions={handleFetch}\n      onSelect={action('selected')}\n      renderOption={renderOption}\n    />\n  )\n}\n\nstoriesOf('AutoComplete Component', module)\n  .add('AutoComplete', SimpleComplete)","/Users/licop/Documents/GitHub/LUI/src/components/AutoComplete/autoComplete.tsx",["133","134"],"import React, { FC, useState, ChangeEvent, KeyboardEvent, ReactElement, useEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport Input, { InputProps } from '../Input/input';\nimport Icon from '../Icon/icon';\nimport useDebounce from '../../hooks/useDebounce'\nimport useClickOutside from '../../hooks/useClickOutside';\nimport Transition from '../Transition/transition';\nimport { render } from 'react-dom';\n\n\ninterface DataSourceObject {\n    value: string\n}\nexport type DataSourceType<T = {}> = T & DataSourceObject;\n\nexport interface AutoCompleteProps extends Omit<InputProps, 'onSelect'> {\n    fetchSuggestions: (str: string) => DataSourceType[] | Promise<DataSourceType[]>,\n    onSelect?: (str: DataSourceType) => void,\n    renderOption?: (str: DataSourceType) => ReactElement | string\n}\n\nconst AutoComplete: FC<AutoCompleteProps> = (props) => {\n    const {\n        fetchSuggestions,\n        onSelect,\n        value,\n        renderOption,\n        ...restProps\n    } = props;\n    const [isLoading, setLoading] = useState(false)\n    const [inputValue,  setInputValue] = useState(value as string);\n    const [suggestions, setSuggestions] = useState<DataSourceType[]>([]);\n    const [highlightIndex, setHighlightIndex] = useState(-1)\n    const [ showDropdown, setShowDropdown] = useState(false)\n    const debounceValue = useDebounce(inputValue, 500);\n    const triggerSearch = useRef(false);\n    const componentRef = useRef<HTMLDivElement>(null);\n\n    const handleSelect = (item: DataSourceType) => {\n        setInputValue(item.value)\n        setShowDropdown(false)\n        if (onSelect) {\n          onSelect(item)\n        }\n        triggerSearch.current = false;\n    }\n    useClickOutside(componentRef, () => {setSuggestions([])});\n    useEffect(() => {\n        if(debounceValue && triggerSearch.current) {\n            const results = fetchSuggestions(debounceValue);\n            if(results instanceof Promise) {\n                setLoading(true);\n                results.then(data => {\n                    setLoading(false);\n                    setSuggestions(data);\n\n                    if (data.length > 0) {\n                        setShowDropdown(true)\n                    }\n                })\n            } else {\n                setSuggestions(results);\n                if (results.length > 0) {\n                    setShowDropdown(true)\n                }\n            }\n        } else {\n            setShowDropdown(false)\n        }\n        setHighlightIndex(-1);\n    }, [debounceValue])\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const value = e.target.value.trim();\n        setInputValue(value);\n        triggerSearch.current = true;\n    }\n    \n    const highlight = (index: number) => {\n        if(index < 0) index = 0;\n        if(index >= suggestions.length) {\n            index = suggestions.length - 1;\n        }\n        setHighlightIndex(index);\n    }\n\n    const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n        switch(e.keyCode) {\n            case 13: \n                if(suggestions[highlightIndex]) {\n                    handleSelect(suggestions[highlightIndex])\n                }\n                break;\n            case 38:\n                highlight(highlightIndex - 1)\n                break;\n            case 40: \n                highlight(highlightIndex + 1)\n                break;\n            case 27:\n                setShowDropdown(false)\n                break;\n            default:\n                break;\n\n        }\n    }\n\n    const generateDropdown = () => {\n        return (\n            <Transition\n                in={showDropdown || isLoading}\n                animation=\"zoom-in-top\"\n                timeout={300}\n                onExited={() => {setSuggestions([])}}\n            >\n                <ul className=\"lui-suggestion-list\">\n                    { isLoading &&\n                        <div className=\"suggstions-loading-icon\">\n                            <Icon icon=\"spinner\" spin/>\n                        </div>\n                    }\n                    {suggestions.map((item, index) => {\n                        const cnames = classNames('suggestion-item', {\n                            'is-active': index === highlightIndex\n                        })\n                        return <li key={index} className={cnames} onClick={() => handleSelect(item)}>\n                            {renderTemplate(item)}\n                        </li>\n                    })}\n                </ul>\n            </Transition> \n        )\n    }\n\n    const renderTemplate = (item: any) => {\n        return renderOption ? renderOption(item) : item.value;\n    }\n\n    return (\n        <div className=\"lui-auto-complete\" ref={componentRef}>\n            <Input \n                value={inputValue}\n                onChange={handleChange}\n                onKeyDown={handleKeyDown}\n                {...restProps}\n            />\n            \n            {generateDropdown()}\n        </div>\n    )\n}\n\nexport default AutoComplete;\n","/Users/licop/Documents/GitHub/LUI/src/hooks/useDebounce.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/hooks/useClickOutside.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Menu/menu.stories.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Upload/unload.stories.tsx",["135","136"],"/Users/licop/Documents/GitHub/LUI/src/components/Upload/upload.tsx",["137"],"/Users/licop/Documents/GitHub/LUI/src/components/Upload/uploadList.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Progress/progress.tsx",[],"/Users/licop/Documents/GitHub/LUI/src/components/Upload/dragger.tsx",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"138","replacedBy":"146"},{"ruleId":"140","replacedBy":"147"},{"ruleId":"142","severity":1,"message":"148","line":10,"column":6,"nodeType":"144","messageId":"145","endLine":10,"endColumn":21},{"ruleId":"142","severity":1,"message":"149","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":28},{"ruleId":"142","severity":1,"message":"150","line":1,"column":64,"nodeType":"144","messageId":"145","endLine":1,"endColumn":78},{"ruleId":"142","severity":1,"message":"151","line":5,"column":11,"nodeType":"144","messageId":"145","endLine":5,"endColumn":27},{"ruleId":"142","severity":1,"message":"152","line":15,"column":9,"nodeType":"144","messageId":"145","endLine":15,"endColumn":15},{"ruleId":"142","severity":1,"message":"153","line":17,"column":9,"nodeType":"144","messageId":"145","endLine":17,"endColumn":25},{"ruleId":"142","severity":1,"message":"154","line":8,"column":10,"nodeType":"144","messageId":"145","endLine":8,"endColumn":16},{"ruleId":"155","severity":1,"message":"156","line":71,"column":8,"nodeType":"157","endLine":71,"endColumn":23,"suggestions":"158"},{"ruleId":"142","severity":1,"message":"159","line":12,"column":7,"nodeType":"144","messageId":"145","endLine":12,"endColumn":20},{"ruleId":"142","severity":1,"message":"160","line":19,"column":7,"nodeType":"144","messageId":"145","endLine":19,"endColumn":18},{"ruleId":"142","severity":1,"message":"161","line":1,"column":26,"nodeType":"144","messageId":"145","endLine":1,"endColumn":35},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"@typescript-eslint/no-unused-vars","'ReactNode' is defined but never used.","Identifier","unusedVar",["162"],["163"],"'TransitionProps' is defined but never used.","'ChangeEvent' is defined but never used.","'HTMLAttributes' is defined but never used.","'LakerPlayerProps' is defined but never used.","'lakers' is assigned a value but never used.","'lakersWithNumber' is assigned a value but never used.","'render' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchSuggestions'. Either include it or remove the dependency array.","ArrayExpression",["164"],"'checkFileSize' is assigned a value but never used.","'filePromise' is assigned a value but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},"Update the dependencies array to be: [debounceValue, fetchSuggestions]",{"range":"167","text":"168"},[2493,2508],"[debounceValue, fetchSuggestions]"]